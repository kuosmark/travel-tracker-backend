{"version":3,"sources":["MessageBlock.js","GoogleApiWrapper.js","components/Images.js","LoginForm.js","RegistrationForm.js","services/travels.js","services/login.js","services/users.js","Notification.js","App.js","index.js"],"names":["MessageBlock","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleDismiss","setState","visible","setTimeout","state","name","header","concat","react_default","a","createElement","Message","floating","compact","onDismiss","content","Component","mapStyles","width","height","inlineStyle","modal","marginTop","display","MapContainer","_Component","onMarkerClick","marker","e","selectedPlace","activeMarker","showingInfoWindow","modalOpen","onClose","onMapClicked","t","map","coord","latLng","lat","lng","markers","title","position","renderMarkers","dist","onClick","handleOpen","handleClose","user","inherits","createClass","key","value","Modal","open","style","closeIcon","Header","Content","image","Image","wrapped","size","src","Description","username","src_MessageBlock","google","zoom","initialCenter","GoogleApiWrapper","_ref","apiKey","language","Container","LoginForm","onSubmit","handleChange","password","className","Grid","textAlign","verticalAlign","Column","maxWidth","as","color","Icon","Form","Segment","Input","fluid","icon","iconPosition","placeholder","onChange","type","Button","Link","to","RegistrationForm","password2","token","travels","getAll","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","apply","arguments","create","_ref2","_callee2","newObject","config","_context2","headers","Authorization","post","_x","update","_ref3","_callee3","id","_context3","put","_x2","_x3","remove","_ref4","_callee4","_context4","delete","_x4","setToken","newToken","services_login","login","credentials","users","Notification","message","warning","App","_getPrototypeOf2","_len","length","args","Array","_key","newUsername","newPassword","newPassword2","handleFieldChange","event","console","log","target","defineProperty","componentDidMount","loggedInUserJSON","window","localStorage","getItem","JSON","parse","travelService","logout","removeItem","notify","preventDefault","loginService","setItem","stringify","t0","register","createAccount","userService","_this2","BrowserRouter","Divider","hidden","src_Notification","Route","exact","path","render","Redirect","src_LoginForm","src_RegistrationForm","App_Map","action","Map","_ref5","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.f4f44d6f.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Message } from 'semantic-ui-react'\n\nclass MessageBlock extends Component {\n  constructor(props) {\n    super()\n    this.state = {\n      name: props.name,\n      visible: true\n    }\n  }\n\n  handleDismiss = () => {\n    this.setState({ visible: false })\n\n    setTimeout(() => {\n      this.setState({ visible: true })\n    }, 2000)\n  }\n\n  render() {\n    const header = `Welcome ${this.state.name}`\n    if (this.state.visible) {\n      return (\n        <Message\n          floating\n          compact\n          onDismiss={this.handleDismiss}\n          header={header}\n          content='This is a special notification which you can dismiss.'\n        />\n      )\n    }\n  }\n}\n\nexport default MessageBlock\n","import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react'\nimport {\n  Item,\n  Grid,\n  Link,\n  Icon,\n  Image,\n  Header,\n  Modal,\n  Button\n} from 'semantic-ui-react'\n\nimport MessageBlock from './MessageBlock'\n\nconst mapStyles = {\n  width: 'auto',\n  height: 'auto'\n}\n\nconst inlineStyle = {\n  modal: {\n    marginTop: '-250px',\n    display: 'fixed !important'\n  }\n}\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: this.props.user,\n      showingInfoWindow: false, //Hides or the shows the infoWindow\n      activeMarker: {}, //Shows the active marker upon click\n      selectedPlace: {}, //Shows the infoWindow to the selected place upon a marker\n      modalOpen: false,\n      markers: [\n        {\n          title: 'Tässä on nuppi',\n          name: 'The marker`s title will appear as a tooltip.',\n          position: { lat: 37.778519, lng: -122.40564 }\n        }\n      ]\n    }\n  }\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n      modalOpen: true\n    })\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      })\n    }\n  }\n\n  onMapClicked = (t, map, coord) => {\n    const { latLng } = coord\n    const lat = latLng.lat()\n    const lng = latLng.lng()\n    this.setState({\n      markers: this.state.markers.concat({\n        title: 'Tässä on nuppi!',\n        name: 'Tähän tulee vaikka minkälaista tekstiä',\n        position: { lat: lat, lng: lng }\n      })\n    })\n  }\n\n  renderMarkers = () => {\n    const markers = this.state.markers\n    return markers.map(marker => (\n      <Marker\n        name={marker.name}\n        position={marker.position}\n        onClick={this.onMarkerClick}\n      />\n    ))\n  }\n\n  handleOpen = () => this.setState({ modalOpen: true })\n\n  handleClose = () => this.setState({ modalOpen: false })\n\n  render() {\n    return (\n      <div>\n        <Modal\n          open={this.state.modalOpen}\n          onClose={this.handleClose}\n          style={inlineStyle.modal}\n          closeIcon>\n          <Modal.Header>Select a Photo</Modal.Header>\n          <Modal.Content image>\n            <Image\n              wrapped\n              size='medium'\n              src='https://react.semantic-ui.com/images/avatar/large/rachel.png'\n            />\n            <Modal.Description>\n              <Header>Owner: {this.state.user.username}</Header>\n              <p>\n                We've found the following gravatar image associated with your\n                e-mail address.\n              </p>\n              <p>Is it okay to use this photo?</p>\n            </Modal.Description>\n          </Modal.Content>\n        </Modal>\n        <MessageBlock name={this.state.user.username} />\n        <Map\n          google={this.props.google}\n          zoom={2}\n          style={mapStyles}\n          initialCenter={{ lat: 0, lng: 0 }}\n          onClick={this.onMapClicked}>\n          {/*<InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n          size='big'>\n          <Item relaxed>\n            <div>{this.state.activeMarker === null ?\n              <h4>...</h4>\n              :\n              <div><h2>{this.state.activeMarker.title}</h2>\n                <h4>{this.state.activeMarker.name}</h4></div>\n            }<Button icon>\n                <Icon name='expand'\n                />\n              </Button></div>\n          </Item>\n          </InfoWindow>*/}\n          {this.renderMarkers()}\n        </Map>\n      </div>\n    )\n  }\n}\n\nexport default GoogleApiWrapper(({ apiKey, language }) => ({\n  apiKey: apiKey,\n  language: language\n}))(MapContainer)\n","import React from 'react'\nimport { Container, Divider, Image } from 'semantic-ui-react'\n\nconst Images = [\n  <Container>\n  </Container>\n]\n\nexport default Images\n","import React from 'react'\nimport {\n  Button,\n  Form,\n  Grid,\n  Icon,\n  Header,\n  Image,\n  Message,\n  Segment\n} from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst LoginForm = ({ onSubmit, handleChange, username, password }) => {\n  return (\n    <div className='login-form'>\n      <style>{`\n      body > div,\n      body > div > div,\n      body > div > div > div.login-form {\n        height: 100%;\n      }\n    `}</style>\n      <Grid\n        textAlign='center'\n        style={{ height: '100%' }}\n        verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='blue' textAlign='center'>\n            <Icon name='plane' /> Log in to account\n          </Header>\n          <Form\n            onSubmit={onSubmit}\n            size='large' /*loading success error field error*/\n          >\n            <Segment>\n              <Form.Input\n                fluid\n                icon='user'\n                name='username'\n                iconPosition='left'\n                placeholder='Username'\n                value={username}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                name='password'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n                value={password}\n                onChange={handleChange}\n              />\n              <Button color='blue' fluid size='large' type='submit'>\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            <Link to='/create'>Create Account</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n}\nexport default LoginForm\n\n/*import React from 'react'\nimport Blog from './components/Blog'\nimport Togglable from './components/Togglable'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport loginService from './services/login'\nimport blogService from './services/blogs'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: '',\n      password: '',\n      blogs: [],\n      user: null,\n      loginVisible: false,\n      message: '',\n      color: ''\n    }\n  }\n\n    const data = await blogService.getAll()\n    const blogs = data\n      .sort(compare)\n      .map(blog =>\n        <Blog\n          key={blog.id}\n          id={blog.id}\n          user={blog.user}\n          likes={blog.likes}\n          author={blog.author}\n          title={blog.title}\n          url={blog.url}\n        />\n      )\n\n    this.setState({ blogs })\n\n    const loggedInUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON)\n      this.setState({ user })\n      blogService.setToken(user.token)\n    }\n  }\n\n  handleFieldChange = (event) => this.setState({ [event.target.name]: event.target.value })\n\n  login = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username: this.state.username,\n        password: this.state.password\n      })\n\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      blogService.setToken(user.token)\n      this.setState({ username: '', password: '', user: user })\n      this.notify(`${this.state.user.username} logged in succesfully!`, 'green')\n    } catch (exception) {\n      console.log(exception)\n      this.notify('invalid username or password!', 'red')\n    }\n  }\n\n  logout = () => () => {\n    blogService.setToken(null)\n    window.localStorage.removeItem('loggedInUser')\n    this.notify(`${this.state.user.username} logged out succesfully!`, 'green')\n    this.setState({ user: null })\n  }\n\n  addBlog = () => () => {\n    const newBlog = {\n      title: this.state.newTitle,\n      author: this.state.newAuthor,\n      url: this.state.newUrl\n    }\n    blogService.create(newBlog)\n  }\n\n  notify = (message, color) => {\n    this.setState({ message, color })\n    setTimeout(() => {\n      this.setState({\n        message: null,\n        color: null\n      })\n    }, 2000)\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>BLOG LIST</h1>\n        <Notification message={this.state.message} color={this.state.color} />\n        {this.state.user === null ?\n          <div>\n            <Togglable buttonLabel=\"login\">\n              <LoginForm\n                onSubmit={this.login}\n                handleChange={this.handleFieldChange}\n                username={this.state.username}\n                password={this.state.password} />\n            </Togglable>\n          </div> :\n          <div>\n            <h2>{this.state.user.username} logged in <button onClick={this.logout()}>logout</button></h2>\n            <Togglable buttonLabel=\"new blog\">\n              <BlogForm\n                onSubmit={this.addBlog()}\n                handleChange={this.handleFieldChange}\n                title={this.state.newTitle}\n                author={this.state.newAuthor}\n                url={this.state.newUrl} />\n            </Togglable>\n            <h2>Blogs</h2>\n            {this.state.blogs}\n          </div>}\n      </div>\n    )\n  }\n}\n\nexport default App\n*/\n","import React from 'react'\nimport {\n  Button,\n  Form,\n  Grid,\n  Icon,\n  Header,\n  Message,\n  Segment\n} from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst RegistrationForm = ({\n  onSubmit,\n  handleChange,\n  username,\n  password,\n  password2\n}) => {\n  return (\n    <div className='login-form'>\n      <style>{`\n      body > div,\n      body > div > div,\n      body > div > div > div.login-form {\n        height: 100%;\n      }\n    `}</style>\n      <Grid\n        textAlign='center'\n        style={{ height: '100%' }}\n        verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='blue' textAlign='center'>\n            <Icon name='user circle' /> Create new account\n          </Header>\n          <Form\n            onSubmit={onSubmit}\n            size='large' /*loading success error field error*/\n          >\n            <Segment>\n              <Form.Input\n                fluid\n                icon='user'\n                name='newUsername'\n                iconPosition='left'\n                placeholder='Username'\n                value={username}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                name='newPassword'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n                value={password}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                name='newPassword2'\n                iconPosition='left'\n                placeholder='Repeat password'\n                type='password'\n                value={password2}\n                onChange={handleChange}\n              />\n              <Button color='blue' fluid size='large' type='submit'>\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            <Link to='/login'>Login to account</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n}\nexport default RegistrationForm\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\nlet token = null\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { 'Authorization': token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { 'Authorization': token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, update, remove, setToken }\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObject => {\n  const response = axios.post(baseUrl, newObject)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst remove = async id => {\n  const response = await axios.delete(`${baseUrl}/${id}`)\n  return response.data\n}\n\nexport default { getAll, create, update, remove }\n","import React from 'react'\nimport { Message, Container, Icon } from 'semantic-ui-react'\n\nconst Notification = ({ message, color }) => {\n  if (message) {\n    return (\n      <Message\n        icon='warning sign'\n        size='big'\n        color={color}\n        header={'Warning!'}\n        content={message}\n        warning\n      />\n    )\n  }\n  return null\n}\n\nexport default Notification\n","import React, { Component } from 'react'\nimport GoogleApiWrapper from './GoogleApiWrapper'\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom'\nimport {\n  Container,\n  Divider,\n  Modal,\n  Header,\n  Link,\n  Image,\n  Grid,\n  Form,\n  Segment,\n  Icon,\n  Button,\n  Message\n} from 'semantic-ui-react'\nimport dataService from './services/Data'\nimport AddMenu from './components/AddMenu'\nimport AddRouting from './components/AddRouting'\nimport LoginForm from './LoginForm'\nimport RegistrationForm from './RegistrationForm'\nimport travelService from './services/travels'\nimport loginService from './services/login'\nimport userService from './services/users.js'\nimport Notification from './Notification'\n\nconst inlineStyle = {\n  modal: {\n    marginTop: '-250px',\n    display: 'fixed !important'\n  }\n}\n\nexport class App extends Component {\n  state = {\n    user: null,\n    username: '',\n    newUsername: '',\n    newPassword: '',\n    newPassword2: '',\n    password: '',\n    color: '',\n    message: ''\n  }\n\n  handleFieldChange = event => {\n    console.log(event.target.value)\n    this.setState({ [event.target.name]: event.target.value })\n  }\n  componentDidMount = async () => {\n    /*const data = await blogService.getAll()\n    const blogs = data\n      .sort(compare)\n      .map(blog =>\n        <Blog\n          key={blog.id}\n          id={blog.id}\n          user={blog.user}\n          likes={blog.likes}\n          author={blog.author}\n          title={blog.title}\n          url={blog.url}\n        />\n      )\n\n    this.setState({ blogs })*/\n\n    const loggedInUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON)\n      this.setState({ user })\n      travelService.setToken(user.token)\n    }\n  }\n\n  logout = () => {\n    travelService.setToken(null)\n    window.localStorage.removeItem('loggedInUser')\n    this.notify(`${this.state.user.username} logged out succesfully!`, 'green')\n    this.setState({ user: null })\n    console.log('hoidettu')\n  }\n\n  notify = (message, color) => {\n    this.setState({ message, color })\n    setTimeout(() => {\n      this.setState({\n        message: null,\n        color: null\n      })\n    }, 2000)\n  }\n\n  login = async event => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username: this.state.username,\n        password: this.state.password\n      })\n\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      travelService.setToken(user.token)\n      this.setState({ username: '', password: '', user: user })\n      this.notify(`${this.state.user.username} logged in succesfully!`, 'green')\n    } catch (exception) {\n      console.log(exception)\n      this.notify('invalid username or password, try again!', 'red')\n      this.setState({ username: '', password: '' })\n    }\n  }\n\n  register = async event => {\n    event.preventDefault()\n    const password = this.state.newPassword\n    if (password !== this.state.newPassword2) {\n      this.notify(\"Passwords don't match!\", 'red')\n    } else if (password.length < 3) {\n      this.notify('Password must be at least 3 characters long!', 'red')\n    } else {\n      this.createAccount()\n    }\n  }\n\n  createAccount = async () => {\n    try {\n      const user = await userService.create({\n        username: this.state.newUsername,\n        password: this.state.newPassword\n      })\n      this.notify(`account ${this.state.newUsername} created!`, 'green')\n      this.setState({ newUsername: '', newPassword: '', newPassword2: '' })\n    } catch (exception) {\n      console.log(exception)\n      this.notify('server error!', 'red')\n    }\n  }\n\n  render() {\n    console.log('THE USER IS', this.state.user)\n    const user = this.state.user !== null\n    return (\n      <Router>\n        <Container>\n          <Divider hidden />\n          <Notification message={this.state.message} color={this.state.color} />\n          <Route\n            exact\n            path='/'\n            render={\n              user\n                ? () => <Redirect to='/map' />\n                : () => <Redirect to='/login' />\n            }\n          />\n          <Route\n            path='/login'\n            render={\n              user\n                ? () => <Redirect to='/map' />\n                : () => (\n                    <LoginForm\n                      onSubmit={this.login}\n                      handleChange={this.handleFieldChange}\n                      username={this.state.username}\n                      password={this.state.password}\n                    />\n                  )\n            }\n          />\n          <Route\n            path='/create'\n            render={\n              user\n                ? () => <Redirect to='/map' />\n                : () => (\n                    <RegistrationForm\n                      onSubmit={this.register}\n                      handleChange={this.handleFieldChange}\n                      username={this.state.newUsername}\n                      password={this.state.newPassword}\n                      password2={this.state.newPassword2}\n                    />\n                  )\n            }\n          />\n          <Route\n            path='/map'\n            render={\n              user\n                ? () => <Map user={this.state.user} action={this.logout} />\n                : () => <Redirect to='/' />\n            }\n          />\n        </Container>\n      </Router>\n    )\n  }\n}\n\nconst Map = ({ user, action }) => {\n  return (\n    <div>\n      <Button onClick={action}>Log out</Button>\n      <GoogleApiWrapper\n        user={user}\n        apiKey='AIzaSyCy6G0q6EnGtGPGAAvLlC37STQU4Med0xE'\n        language={'en'}\n      />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}