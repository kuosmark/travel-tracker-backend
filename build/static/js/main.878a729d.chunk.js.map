{"version":3,"sources":["GoogleApiWrapper.js","MessageBlock.js","components/Images.js","LoginForm.js","RegistrationForm.js","services/travels.js","services/login.js","services/users.js","Notification.js","App.js","index.js"],"names":["inlineStyle","Component","modal","marginTop","display","MapContainer","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onMarkerClick","marker","e","setState","selectedPlace","activeMarker","showingInfoWindow","modalOpen","onClose","state","onMapClicked","t","map","coord","latLng","lat","lng","markers","concat","title","name","position","renderMarkers","react_default","a","createElement","dist","onClick","handleOpen","handleClose","user","inherits","createClass","key","value","style","height","width","flexFlow","justifyContent","padding","Modal","open","closeIcon","Header","Content","image","Image","wrapped","size","src","Description","username","google","zoom","initialCenter","GoogleApiWrapper","_ref","apiKey","language","Container","LoginForm","onSubmit","handleChange","password","className","Grid","textAlign","verticalAlign","Column","maxWidth","as","color","Icon","Form","Segment","Input","fluid","icon","iconPosition","placeholder","onChange","type","Button","Message","Link","to","RegistrationForm","password2","token","travels","getAll","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","apply","arguments","create","_ref2","_callee2","newObject","config","_context2","headers","Authorization","post","_x","update","_ref3","_callee3","id","_context3","put","_x2","_x3","remove","_ref4","_callee4","_context4","delete","_x4","setToken","newToken","services_login","login","credentials","users","Notification","message","header","content","warning","App","_getPrototypeOf2","_len","length","args","Array","_key","newUsername","newPassword","newPassword2","handleFieldChange","event","console","log","target","defineProperty","componentDidMount","loggedInUserJSON","window","localStorage","getItem","JSON","parse","travelService","logout","removeItem","notify","setTimeout","preventDefault","loginService","setItem","stringify","t0","register","createAccount","userService","history","push","_this2","src_Notification","Route","exact","path","render","Redirect","src_LoginForm","src_RegistrationForm","bind","App_Map","settings","Map","_ref5","marginLeft","withRouter","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.878a729d.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react'\nimport {\n  Item,\n  Grid,\n  Link,\n  Icon,\n  Image,\n  Header,\n  Modal,\n  Button,\n  Container\n} from 'semantic-ui-react'\n\nimport MessageBlock from './MessageBlock'\n\nconst mapStyles = {\n  width: '75%',\n  height: '75%'\n}\n\nconst inlineStyle = {\n  modal: {\n    marginTop: '-250px',\n    display: 'fixed !important'\n  }\n}\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: this.props.user,\n      showingInfoWindow: false, //Hides or the shows the infoWindow\n      activeMarker: {}, //Shows the active marker upon click\n      selectedPlace: {}, //Shows the infoWindow to the selected place upon a marker\n      modalOpen: false,\n      markers: [\n        {\n          title: 'Tässä on nuppi',\n          name: 'The marker`s title will appear as a tooltip.',\n          position: { lat: 37.778519, lng: -122.40564 }\n        }\n      ]\n    }\n  }\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n      modalOpen: true\n    })\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      })\n    }\n  }\n\n  onMapClicked = (t, map, coord) => {\n    const { latLng } = coord\n    const lat = latLng.lat()\n    const lng = latLng.lng()\n    this.setState({\n      markers: this.state.markers.concat({\n        title: 'Tässä on nuppi!',\n        name: 'Tähän tulee vaikka minkälaista tekstiä',\n        position: { lat: lat, lng: lng }\n      })\n    })\n  }\n\n  renderMarkers = () => {\n    const markers = this.state.markers\n    return markers.map(marker => (\n      <Marker\n        name={marker.name}\n        position={marker.position}\n        onClick={this.onMarkerClick}\n      />\n    ))\n  }\n\n  handleOpen = () => this.setState({ modalOpen: true })\n\n  handleClose = () => this.setState({ modalOpen: false })\n\n  render() {\n    return (\n      <div\n        style={{\n          height: 350,\n          width: '100%',\n          display: 'flex',\n          flexFlow: 'row nowrap',\n          justifyContent: 'center',\n          padding: 0\n        }}>\n        <Modal\n          open={this.state.modalOpen}\n          onClose={this.handleClose}\n          style={inlineStyle.modal}\n          closeIcon>\n          <Modal.Header>Select a Photo</Modal.Header>\n          <Modal.Content image>\n            <Image\n              wrapped\n              size='medium'\n              src='https://react.semantic-ui.com/images/avatar/large/rachel.png'\n            />\n            <Modal.Description>\n              <Header>Owner: {this.state.user.username}</Header>\n              <p>\n                We've found the following gravatar image associated with your\n                e-mail address.\n              </p>\n              <p>Is it okay to use this photo?</p>\n            </Modal.Description>\n          </Modal.Content>\n        </Modal>\n        {/*<MessageBlock name={this.state.user.username} />*/}\n        <Map\n          google={this.props.google}\n          zoom={2}\n          initialCenter={{ lat: 0, lng: 0 }}\n          onClick={this.onMapClicked}>\n          {/*<InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n          size='big'>\n          <Item relaxed>\n            <div>{this.state.activeMarker === null ?\n              <h4>...</h4>\n              :\n              <div><h2>{this.state.activeMarker.title}</h2>\n                <h4>{this.state.activeMarker.name}</h4></div>\n            }<Button icon>\n                <Icon name='expand'\n                />\n              </Button></div>\n          </Item>\n          </InfoWindow>*/}\n          {this.renderMarkers()}\n        </Map>\n      </div>\n    )\n  }\n}\n\nexport default GoogleApiWrapper(({ apiKey, language }) => ({\n  apiKey: apiKey,\n  language: language\n}))(MapContainer)\n","import React, { Component } from 'react'\nimport { Message } from 'semantic-ui-react'\n\nclass MessageBlock extends Component {\n  constructor(props) {\n    super()\n    this.state = {\n      name: props.name,\n      visible: true\n    }\n  }\n\n  handleDismiss = () => {\n    this.setState({ visible: false })\n\n    setTimeout(() => {\n      this.setState({ visible: true })\n    }, 2000)\n  }\n\n  render() {\n    const header = `Welcome ${this.state.name}`\n    if (this.state.visible) {\n      return (\n        <Message\n          floating\n          compact\n          onDismiss={this.handleDismiss}\n          header={header}\n          content='This is a special notification which you can dismiss.'\n        />\n      )\n    }\n  }\n}\n\nexport default MessageBlock\n","import React from 'react'\nimport { Container, Divider, Image } from 'semantic-ui-react'\n\nconst Images = [\n  <Container>\n  </Container>\n]\n\nexport default Images\n","import React from 'react'\nimport {\n  Button,\n  Form,\n  Grid,\n  Icon,\n  Header,\n  Image,\n  Message,\n  Segment\n} from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst LoginForm = ({ onSubmit, handleChange, username, password }) => {\n  return (\n    <div className='login-form'>\n      <style>{`\n      body > div,\n      body > div > div,\n      body > div > div > div.login-form {\n        height: 100%;\n      }\n    `}</style>\n      <Grid\n        textAlign='center'\n        style={{ height: '100%' }}\n        verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='blue' textAlign='center'>\n            <Icon name='plane' /> Log in to account\n          </Header>\n          <Form\n            onSubmit={onSubmit}\n            size='large' /*loading success error field error*/\n          >\n            <Segment>\n              <Form.Input\n                fluid\n                icon='user'\n                name='username'\n                iconPosition='left'\n                placeholder='Username'\n                value={username}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                name='password'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n                value={password}\n                onChange={handleChange}\n              />\n              <Button color='blue' fluid size='large' type='submit'>\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            <Link to='/create'>Create new account</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n}\nexport default LoginForm\n\n/*import React from 'react'\nimport Blog from './components/Blog'\nimport Togglable from './components/Togglable'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport loginService from './services/login'\nimport blogService from './services/blogs'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: '',\n      password: '',\n      blogs: [],\n      user: null,\n      loginVisible: false,\n      message: '',\n      color: ''\n    }\n  }\n\n    const data = await blogService.getAll()\n    const blogs = data\n      .sort(compare)\n      .map(blog =>\n        <Blog\n          key={blog.id}\n          id={blog.id}\n          user={blog.user}\n          likes={blog.likes}\n          author={blog.author}\n          title={blog.title}\n          url={blog.url}\n        />\n      )\n\n    this.setState({ blogs })\n\n    const loggedInUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON)\n      this.setState({ user })\n      blogService.setToken(user.token)\n    }\n  }\n\n  handleFieldChange = (event) => this.setState({ [event.target.name]: event.target.value })\n\n  login = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username: this.state.username,\n        password: this.state.password\n      })\n\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      blogService.setToken(user.token)\n      this.setState({ username: '', password: '', user: user })\n      this.notify(`${this.state.user.username} logged in succesfully!`, 'green')\n    } catch (exception) {\n      console.log(exception)\n      this.notify('invalid username or password!', 'red')\n    }\n  }\n\n  logout = () => () => {\n    blogService.setToken(null)\n    window.localStorage.removeItem('loggedInUser')\n    this.notify(`${this.state.user.username} logged out succesfully!`, 'green')\n    this.setState({ user: null })\n  }\n\n  addBlog = () => () => {\n    const newBlog = {\n      title: this.state.newTitle,\n      author: this.state.newAuthor,\n      url: this.state.newUrl\n    }\n    blogService.create(newBlog)\n  }\n\n  notify = (message, color) => {\n    this.setState({ message, color })\n    setTimeout(() => {\n      this.setState({\n        message: null,\n        color: null\n      })\n    }, 2000)\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>BLOG LIST</h1>\n        <Notification message={this.state.message} color={this.state.color} />\n        {this.state.user === null ?\n          <div>\n            <Togglable buttonLabel=\"login\">\n              <LoginForm\n                onSubmit={this.login}\n                handleChange={this.handleFieldChange}\n                username={this.state.username}\n                password={this.state.password} />\n            </Togglable>\n          </div> :\n          <div>\n            <h2>{this.state.user.username} logged in <button onClick={this.logout()}>logout</button></h2>\n            <Togglable buttonLabel=\"new blog\">\n              <BlogForm\n                onSubmit={this.addBlog()}\n                handleChange={this.handleFieldChange}\n                title={this.state.newTitle}\n                author={this.state.newAuthor}\n                url={this.state.newUrl} />\n            </Togglable>\n            <h2>Blogs</h2>\n            {this.state.blogs}\n          </div>}\n      </div>\n    )\n  }\n}\n\nexport default App\n*/\n","import React from 'react'\nimport {\n  Button,\n  Form,\n  Grid,\n  Icon,\n  Header,\n  Message,\n  Segment\n} from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst RegistrationForm = ({\n  onSubmit,\n  handleChange,\n  username,\n  password,\n  password2\n}) => {\n  return (\n    <div className='login-form'>\n      <style>{`\n      body > div,\n      body > div > div,\n      body > div > div > div.login-form {\n        height: 100%;\n      }\n    `}</style>\n      <Grid\n        textAlign='center'\n        style={{ height: '100%' }}\n        verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='blue' textAlign='center'>\n            <Icon name='user circle' /> Create new account\n          </Header>\n          <Form\n            onSubmit={onSubmit}\n            size='large' /*loading success error field error*/\n          >\n            <Segment>\n              <Form.Input\n                fluid\n                icon='user'\n                name='newUsername'\n                iconPosition='left'\n                placeholder='Username'\n                value={username}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                name='newPassword'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n                value={password}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                name='newPassword2'\n                iconPosition='left'\n                placeholder='Repeat password'\n                type='password'\n                value={password2}\n                onChange={handleChange}\n              />\n              <Button color='blue' fluid size='large' type='submit'>\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            <Link to='/login'>Login to account</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n}\nexport default RegistrationForm\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\nlet token = null\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { 'Authorization': token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { 'Authorization': token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, update, remove, setToken }\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObject => {\n  const response = axios.post(baseUrl, newObject)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst remove = async id => {\n  const response = await axios.delete(`${baseUrl}/${id}`)\n  return response.data\n}\n\nexport default { getAll, create, update, remove }\n","import React from 'react'\nimport { Message, Container, Icon } from 'semantic-ui-react'\n\nconst Notification = ({ message, color }) => {\n  const icon = color === 'red' ? 'warning sign' : 'thumbs up'\n  const header = color === 'red' ? 'Warning!' : 'Success!'\n  if (message) {\n    return (\n      <Message\n        icon={icon}\n        size='big'\n        color={color}\n        header={header}\n        content={message}\n        warning\n      />\n    )\n  }\n  return null\n}\n\nexport default Notification\n","import React, { Component } from 'react'\nimport GoogleApiWrapper from './GoogleApiWrapper'\nimport {\n  BrowserRouter as Router,\n  withRouter,\n  Redirect,\n  Route\n} from 'react-router-dom'\nimport {\n  Container,\n  Divider,\n  Modal,\n  Header,\n  Link,\n  Image,\n  Grid,\n  Form,\n  Segment,\n  Icon,\n  Button,\n  Message\n} from 'semantic-ui-react'\nimport dataService from './services/Data'\nimport AddMenu from './components/AddMenu'\nimport AddRouting from './components/AddRouting'\nimport LoginForm from './LoginForm'\nimport RegistrationForm from './RegistrationForm'\nimport travelService from './services/travels'\nimport loginService from './services/login'\nimport userService from './services/users.js'\nimport Notification from './Notification'\n\nconst inlineStyle = {\n  modal: {\n    marginTop: '-250px',\n    display: 'fixed !important'\n  }\n}\n\nexport class App extends Component {\n  state = {\n    user: null,\n    username: '',\n    newUsername: '',\n    newPassword: '',\n    newPassword2: '',\n    password: '',\n    color: '',\n    message: ''\n  }\n\n  handleFieldChange = event => {\n    console.log(event.target.value)\n    this.setState({ [event.target.name]: event.target.value })\n  }\n  componentDidMount = async () => {\n    /*const data = await blogService.getAll()\n    const blogs = data\n      .sort(compare)\n      .map(blog =>\n        <Blog\n          key={blog.id}\n          id={blog.id}\n          user={blog.user}\n          likes={blog.likes}\n          author={blog.author}\n          title={blog.title}\n          url={blog.url}\n        />\n      )\n\n    this.setState({ blogs })*/\n\n    const loggedInUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON)\n      this.setState({ user })\n      travelService.setToken(user.token)\n    }\n  }\n\n  logout = () => {\n    travelService.setToken(null)\n    window.localStorage.removeItem('loggedInUser')\n    this.notify(`${this.state.user.username} logged out succesfully!`, 'green')\n    this.setState({ user: null })\n    console.log('hoidettu')\n  }\n\n  notify = (message, color) => {\n    this.setState({ message, color })\n    setTimeout(() => {\n      this.setState({\n        message: null,\n        color: null\n      })\n    }, 2000)\n  }\n\n  login = async event => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username: this.state.username,\n        password: this.state.password\n      })\n\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      travelService.setToken(user.token)\n      this.setState({ username: '', password: '', user: user })\n      this.notify(`${this.state.user.username} logged in succesfully!`, 'green')\n    } catch (exception) {\n      console.log(exception)\n      this.notify('invalid username or password, try again!', 'red')\n      this.setState({ username: '', password: '' })\n    }\n  }\n\n  register = async event => {\n    event.preventDefault()\n    const password = this.state.newPassword\n    if (password !== this.state.newPassword2) {\n      this.notify(\"Passwords don't match!\", 'red')\n    } else if (password.length < 3) {\n      this.notify('Password must be at least 3 characters long!', 'red')\n    } else {\n      this.createAccount()\n    }\n  }\n\n  createAccount = async () => {\n    try {\n      const user = await userService.create({\n        username: this.state.newUsername,\n        password: this.state.newPassword\n      })\n      this.notify(`account ${this.state.newUsername} created!`, 'green')\n      this.setState({\n        newUsername: '',\n        newPassword: '',\n        newPassword2: ''\n      })\n    } catch (exception) {\n      console.log(exception)\n      this.notify('server error!', 'red')\n    }\n    this.props.history.push('/login')\n  }\n\n  render() {\n    console.log('THE USER IS', this.state.user)\n    const user = this.state.user !== null\n    return (\n      <Container>\n        <Notification message={this.state.message} color={this.state.color} />\n        <Route\n          exact\n          path='/'\n          render={\n            user ? () => <Redirect to='/map' /> : () => <Redirect to='/login' />\n          }\n        />\n        <Route\n          path='/login'\n          render={\n            user\n              ? () => <Redirect to='/map' />\n              : () => (\n                  <LoginForm\n                    onSubmit={this.login}\n                    handleChange={this.handleFieldChange}\n                    username={this.state.username}\n                    password={this.state.password}\n                  />\n                )\n          }\n        />\n        <Route\n          path='/create'\n          render={\n            user\n              ? () => <Redirect to='/map' />\n              : () => (\n                  <RegistrationForm\n                    onSubmit={this.register.bind(this)}\n                    handleChange={this.handleFieldChange}\n                    username={this.state.newUsername}\n                    password={this.state.newPassword}\n                    password2={this.state.newPassword2}\n                  />\n                )\n          }\n        />\n        <Route\n          path='/map'\n          render={\n            user\n              ? () => (\n                  <Map\n                    user={this.state.user}\n                    logout={this.logout}\n                    settings={this.logout}\n                  />\n                )\n              : () => <Redirect to='/' />\n          }\n        />\n      </Container>\n    )\n  }\n}\n\nconst Map = ({ user, logout, settings }) => {\n  return (\n    <div\n      style={{\n        width: '100%',\n        marginLeft: 0\n      }}>\n      {/*<Button onClick={logout}>Log out</Button>\n      <Button onClick={settings}>Settings</Button>*/}\n      <GoogleApiWrapper\n        user={user}\n        apiKey='AIzaSyCy6G0q6EnGtGPGAAvLlC37STQU4Med0xE'\n        language={'en'}\n      />\n    </div>\n  )\n}\n\nexport default withRouter(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}