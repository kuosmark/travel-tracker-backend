{"version":3,"sources":["services/travels.js","AddModal.js","GoogleApiWrapper.js","LoginForm.js","RegistrationForm.js","services/login.js","services/users.js","Notification.js","App.js","index.js"],"names":["baseUrl","token","travels","getAll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","this","apply","arguments","create","_ref2","_callee2","newObject","config","_context2","headers","Authorization","post","_x","update","_ref3","_callee3","id","_context3","console","log","put","concat","_x2","_x3","remove","_ref4","_callee4","_context4","delete","_x4","setToken","newToken","AddModal","open","close","inlineStyle","marker","newTitle","newText","onRemoveSubmit","onEditSubmit","handleChange","active","setInfo","setEdit","setSettings","confirmOpen","openConfirm","closeConfirm","react_default","createElement","Modal","onClose","style","modal","closeIcon","Confirm","centered","content","length","cancelButton","confirmButton","verticalAllign","onCancel","onConfirm","Menu","icon","fluid","widths","tabular","size","color","Item","name","onClick","Icon","Divider","hidden","Grid","verticalAlign","Row","Header","as","textAlign","title","Segment","text","Column","maxWidth","Form","onSubmit","Input","label","value","onChange","TextArea","rows","Button","type","padded","marginTop","display","MapContainer","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","markers","travelService","map","user","_id","position","lat","lng","setState","handleFieldChange","event","defineProperty","target","updateMarker","editedMarker","updatedMarker","objectSpread","state","activeMarker","filter","m","activeMenuItem","removeMarker","toRemove","t0","modalOpen","onMarkerClick","e","clickedMarker","find","selectedPlace","handleModalClose","onMapClicked","_ref5","_callee5","t","coord","latLng","newMarker","travel","_context5","_x5","_x6","_x7","renderMarkers","dist","key","handleClose","showingInfoWindow","inherits","createClass","height","width","flexFlow","justifyContent","padding","src_AddModal","google","zoom","initialCenter","Component","GoogleApiWrapper","_ref6","apiKey","language","LoginForm","username","password","className","iconPosition","placeholder","Message","Link","to","RegistrationForm","password2","services_login","login","credentials","users","Notification","message","header","warning","App","_getPrototypeOf2","_len","args","Array","_key","newUsername","newPassword","newPassword2","loggedInUserJSON","window","localStorage","getItem","JSON","parse","logout","removeItem","notify","setTimeout","preventDefault","loginService","setItem","stringify","register","createAccount","userService","history","push","_this2","Container","src_Notification","Route","exact","path","render","Redirect","src_LoginForm","src_RegistrationForm","App_Map","settings","Map","App_MenuExampleButtons","MenuExampleButtons","stackable","withRouter","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.b23fba45.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/travels'\nlet token = null\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  console.log('TÄÄ')\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  console.log('TÄSSÄ', response.data)\n  return response.data\n}\n\nconst remove = async id => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, update, remove, setToken }\n","import React, { Component } from 'react'\nimport {\n  Modal,\n  Header,\n  Image,\n  Segment,\n  Form,\n  Grid,\n  Message,\n  Divider,\n  Confirm,\n  Menu,\n  Button,\n  Icon\n} from 'semantic-ui-react'\n\nconst AddModal = ({\n  open,\n  close,\n  inlineStyle,\n  marker,\n  newTitle,\n  newText,\n  onRemoveSubmit,\n  onEditSubmit,\n  handleChange,\n  active,\n  setInfo,\n  setEdit,\n  setSettings,\n  confirmOpen,\n  openConfirm,\n  closeConfirm\n}) => {\n  return (\n    <Modal open={open} onClose={close} style={inlineStyle.modal} closeIcon>\n      <div style={inlineStyle}>\n        <Confirm\n          centered\n          content={\n            newText.length === 0 && newTitle.length === 0\n              ? 'Do you want to remove the empty marker?'\n              : 'Are you sure?'\n          }\n          cancelButton='Never mind'\n          confirmButton=\"Let's do it\"\n          verticalAllign='middle'\n          open={confirmOpen}\n          onCancel={closeConfirm}\n          onConfirm={onRemoveSubmit}\n        />\n      </div>\n      <div>\n        <Menu icon='labeled' fluid widths={3} tabular size='huge' color='blue'>\n          <Menu.Item name='info' active={active === 'info'} onClick={setInfo}>\n            <Icon name='trophy' />\n            Info\n          </Menu.Item>\n          <Menu.Item name='edit' active={active === 'edit'} onClick={setEdit}>\n            <Icon name='pencil' />\n            Edit\n          </Menu.Item>\n          <Menu.Item\n            name='settings'\n            active={active === 'settings'}\n            onClick={setSettings}>\n            <Icon name='trash' />\n            Remove\n          </Menu.Item>\n        </Menu>\n        <Divider hidden />\n        <Divider hidden />\n        <Divider hidden />\n        {active === 'info' ? (\n          <div>\n            <div>\n              <Grid centered verticalAlign='middle'>\n                <Grid.Row>\n                  <Header as='h1' textAlign='center'>\n                    {newTitle.length > 0 ? marker.title : ''}\n                  </Header>\n                </Grid.Row>\n                <Grid.Row>\n                  {newText.length > 0 ? (\n                    <Segment>{marker.text}</Segment>\n                  ) : (\n                    <div />\n                  )}\n                </Grid.Row>\n              </Grid>\n            </div>\n          </div>\n        ) : active === 'edit' ? (\n          <div>\n            <Grid centered verticalAlign='middle'>\n              <Grid.Column style={{ maxWidth: 450 }}>\n                <Form\n                  onSubmit={onEditSubmit}\n                  size='large' /*loading success error field error*/\n                >\n                  <Form.Input\n                    name='newTitle'\n                    //placeholder='Enter title'\n                    label='Edit title'\n                    value={newTitle}\n                    onChange={handleChange}\n                  />\n                  <Form.TextArea\n                    name='newText'\n                    label='Additional information'\n                    value={newText}\n                    //placeholder='Enter travel information'\n                    rows={5}\n                    onChange={handleChange}\n                  />\n                  <Button color='blue' fluid size='large' type='submit'>\n                    Update\n                  </Button>\n                </Form>\n              </Grid.Column>\n            </Grid>\n          </div>\n        ) : (\n          <div>\n            <Divider hidden />\n            <Grid padded='very' centered verticalAlign='middle'>\n              <Button\n                size='large'\n                centered\n                color='blue'\n                type='submit'\n                onClick={openConfirm}>\n                Remove marker\n              </Button>\n            </Grid>\n            <Divider hidden />\n          </div>\n        )}\n        <Divider hidden />\n        <Divider hidden />\n        <Divider hidden />\n      </div>\n    </Modal>\n  )\n}\n\nexport default AddModal\n","import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react'\nimport {\n  Item,\n  Grid,\n  Link,\n  Icon,\n  Image,\n  Header,\n  Modal,\n  Button,\n  Container\n} from 'semantic-ui-react'\nimport travelService from './services/travels'\nimport AddModal from './AddModal'\n\nconst mapStyles = {\n  width: '75%',\n  height: '75%'\n}\n\nconst inlineStyle = {\n  modal: {\n    marginTop: '-240px',\n    display: 'fixed !important'\n  }\n}\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: this.props.user,\n      showingInfoWindow: false, //Hides or the shows the infoWindow\n      activeMarker: {}, //Shows the active marker upon click\n      selectedPlace: {}, //Shows the infoWindow to the selected place upon a marker\n      modalOpen: false,\n      markers: [],\n      newTitle: '',\n      newText: '',\n      activeMenuItem: 'info',\n      open: false\n    }\n  }\n\n  componentDidMount = async () => {\n    const data = await travelService.getAll()\n    console.log('data', data)\n    const markers = data.map(marker => {\n      return {\n        user: marker.user._id,\n        id: marker.id,\n        title: marker.title,\n        text: marker.text,\n        position: { lat: marker.position.lat, lng: marker.position.lng }\n      }\n    })\n    this.setState({ markers })\n  }\n\n  open = () => this.setState({ open: true })\n  close = () => this.setState({ open: false })\n\n  handleFieldChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  updateMarker = async event => {\n    const editedMarker = {\n      ...this.state.activeMarker,\n      title: this.state.newTitle,\n      text: this.state.newText\n    }\n    const updatedMarker = await travelService.update(\n      editedMarker.id,\n      editedMarker\n    )\n    const markers = this.state.markers.filter(m => m.id !== editedMarker.id)\n    await this.setState({\n      activeMarker: updatedMarker,\n      newTitle: updatedMarker.title,\n      newText: updatedMarker.text,\n      markers: markers.concat(updatedMarker),\n      activeMenuItem: 'info'\n    })\n  }\n\n  removeMarker = async () => {\n    const toRemove = this.state.activeMarker\n    try {\n      const travel = await travelService.remove(toRemove.id)\n      const markers = this.state.markers.filter(m => m.id !== toRemove.id)\n      await this.setState({ markers })\n    } catch (exception) {\n      console.log(exception)\n    }\n    await this.setState({\n      activeMarker: {},\n      newTitle: '',\n      newText: '',\n      modalOpen: false,\n      open: false\n    })\n  }\n\n  onMarkerClick = async (props, marker, e) => {\n    const lat = props.position.lat\n    const lng = props.position.lng\n    const clickedMarker = this.state.markers.find(\n      marker => marker.position.lat === lat && marker.position.lng === lng\n    )\n    this.setState({\n      selectedPlace: props,\n      activeMarker: clickedMarker,\n      newTitle: clickedMarker.title,\n      newText: clickedMarker.text,\n      modalOpen: true,\n      activeMenuItem: 'info'\n    })\n  }\n\n  handleModalClose = props => {\n    console.log(this.state.newText, '<-teksti titteli ->', this.state.newTitle)\n    if (this.state.newText.length === 0 && this.state.newTitle.length === 0) {\n      this.open()\n    } else {\n      this.setState({\n        activeMarker: {},\n        newTitle: '',\n        newText: '',\n        modalOpen: false\n      })\n    }\n  }\n\n  onMapClicked = async (t, map, coord) => {\n    const { latLng } = coord\n    const lat = latLng.lat()\n    const lng = latLng.lng()\n    console.log('id', this.state.user)\n    const newMarker = {\n      user: this.state.user.id,\n      title: '',\n      text: '',\n      position: {\n        lat,\n        lng\n      }\n    }\n    try {\n      const travel = await travelService.create(newMarker)\n      await this.setState({\n        markers: this.state.markers.concat(travel),\n        activeMarker: travel,\n        newTitle: travel.title,\n        newText: travel.text,\n        modalOpen: true,\n        activeMenuItem: 'edit'\n      })\n    } catch (exception) {\n      console.log(exception)\n    }\n  }\n\n  renderMarkers = () => {\n    const markers = this.state.markers.filter(\n      m => m.user === this.state.user.id\n    )\n    console.log('markers', markers)\n    return markers.map(marker => (\n      <Marker\n        key={marker.id}\n        title={marker.title}\n        name={marker.text}\n        position={marker.position}\n        onClick={this.onMarkerClick}\n      />\n    ))\n  }\n\n  handleClose = () => this.setState({ modalOpen: false })\n\n  setInfo = () => this.setState({ activeMenuItem: 'info' })\n  setEdit = () => this.setState({ activeMenuItem: 'edit' })\n  setSettings = () => this.setState({ activeMenuItem: 'settings' })\n\n  render() {\n    return (\n      <div\n        style={{\n          height: 350,\n          width: '100%',\n          display: 'flex',\n          flexFlow: 'row nowrap',\n          justifyContent: 'center',\n          padding: 0\n        }}>\n        <AddModal\n          open={this.state.modalOpen}\n          close={this.handleModalClose}\n          inlineStyle={inlineStyle}\n          marker={this.state.activeMarker}\n          newTitle={this.state.newTitle}\n          newText={this.state.newText}\n          onRemoveSubmit={this.removeMarker}\n          onEditSubmit={this.updateMarker}\n          handleChange={this.handleFieldChange}\n          active={this.state.activeMenuItem}\n          setInfo={this.setInfo}\n          setEdit={this.setEdit}\n          setSettings={this.setSettings}\n          confirmOpen={this.state.open}\n          openConfirm={this.open}\n          closeConfirm={this.close}\n        />\n        <Map\n          google={this.props.google}\n          zoom={2}\n          initialCenter={{ lat: 0, lng: 0 }}\n          onClick={this.onMapClicked}>\n          {this.renderMarkers()}\n        </Map>\n      </div>\n    )\n  }\n}\n\nexport default GoogleApiWrapper(({ apiKey, language }) => ({\n  apiKey: apiKey,\n  language: language\n}))(MapContainer)\n","import React from 'react'\nimport {\n  Button,\n  Form,\n  Grid,\n  Icon,\n  Header,\n  Image,\n  Message,\n  Segment\n} from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst LoginForm = ({ onSubmit, handleChange, username, password }) => {\n  return (\n    <div className='login-form'>\n      <style>{`\n      body > div,\n      body > div > div,\n      body > div > div > div.login-form {\n        height: 100%;\n      }\n    `}</style>\n      <Grid\n        textAlign='center'\n        style={{ height: '100%' }}\n        verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='blue' textAlign='center'>\n            <Icon name='plane' /> Log in to account\n          </Header>\n          <Form\n            onSubmit={onSubmit}\n            size='large' /*loading success error field error*/\n          >\n            <Segment>\n              <Form.Input\n                fluid\n                icon='user'\n                name='username'\n                iconPosition='left'\n                placeholder='Username'\n                value={username}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                name='password'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n                value={password}\n                onChange={handleChange}\n              />\n              <Button color='blue' fluid size='large' type='submit'>\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            <Link to='/create'>Create new account</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n}\nexport default LoginForm\n\n/*import React from 'react'\nimport Blog from './components/Blog'\nimport Togglable from './components/Togglable'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport loginService from './services/login'\nimport blogService from './services/blogs'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: '',\n      password: '',\n      blogs: [],\n      user: null,\n      loginVisible: false,\n      message: '',\n      color: ''\n    }\n  }\n\n    const data = await blogService.getAll()\n    const blogs = data\n      .sort(compare)\n      .map(blog =>\n        <Blog\n          key={blog.id}\n          id={blog.id}\n          user={blog.user}\n          likes={blog.likes}\n          author={blog.author}\n          title={blog.title}\n          url={blog.url}\n        />\n      )\n\n    this.setState({ blogs })\n\n    const loggedInUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON)\n      this.setState({ user })\n      blogService.setToken(user.token)\n    }\n  }\n\n  handleFieldChange = (event) => this.setState({ [event.target.name]: event.target.value })\n\n  login = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username: this.state.username,\n        password: this.state.password\n      })\n\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      blogService.setToken(user.token)\n      this.setState({ username: '', password: '', user: user })\n      this.notify(`${this.state.user.username} logged in succesfully!`, 'green')\n    } catch (exception) {\n      console.log(exception)\n      this.notify('invalid username or password!', 'red')\n    }\n  }\n\n  logout = () => () => {\n    blogService.setToken(null)\n    window.localStorage.removeItem('loggedInUser')\n    this.notify(`${this.state.user.username} logged out succesfully!`, 'green')\n    this.setState({ user: null })\n  }\n\n  addBlog = () => () => {\n    const newBlog = {\n      title: this.state.newTitle,\n      author: this.state.newAuthor,\n      url: this.state.newUrl\n    }\n    blogService.create(newBlog)\n  }\n\n  notify = (message, color) => {\n    this.setState({ message, color })\n    setTimeout(() => {\n      this.setState({\n        message: null,\n        color: null\n      })\n    }, 2000)\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>BLOG LIST</h1>\n        <Notification message={this.state.message} color={this.state.color} />\n        {this.state.user === null ?\n          <div>\n            <Togglable buttonLabel=\"login\">\n              <LoginForm\n                onSubmit={this.login}\n                handleChange={this.handleFieldChange}\n                username={this.state.username}\n                password={this.state.password} />\n            </Togglable>\n          </div> :\n          <div>\n            <h2>{this.state.user.username} logged in <button onClick={this.logout()}>logout</button></h2>\n            <Togglable buttonLabel=\"new blog\">\n              <BlogForm\n                onSubmit={this.addBlog()}\n                handleChange={this.handleFieldChange}\n                title={this.state.newTitle}\n                author={this.state.newAuthor}\n                url={this.state.newUrl} />\n            </Togglable>\n            <h2>Blogs</h2>\n            {this.state.blogs}\n          </div>}\n      </div>\n    )\n  }\n}\n\nexport default App\n*/\n","import React from 'react'\nimport {\n  Button,\n  Form,\n  Grid,\n  Icon,\n  Header,\n  Message,\n  Segment\n} from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst RegistrationForm = ({\n  onSubmit,\n  handleChange,\n  username,\n  password,\n  password2\n}) => {\n  return (\n    <div className='login-form'>\n      <style>{`\n      body > div,\n      body > div > div,\n      body > div > div > div.login-form {\n        height: 100%;\n      }\n    `}</style>\n      <Grid\n        textAlign='center'\n        style={{ height: '100%' }}\n        verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='blue' textAlign='center'>\n            <Icon name='user circle' /> Create new account\n          </Header>\n          <Form\n            onSubmit={onSubmit}\n            size='large' /*loading success error field error*/\n          >\n            <Segment>\n              <Form.Input\n                fluid\n                icon='user'\n                name='newUsername'\n                iconPosition='left'\n                placeholder='Username'\n                value={username}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                name='newPassword'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n                value={password}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                name='newPassword2'\n                iconPosition='left'\n                placeholder='Repeat password'\n                type='password'\n                value={password2}\n                onChange={handleChange}\n              />\n              <Button color='blue' fluid size='large' type='submit'>\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            <Link to='/login'>Login to account</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n}\nexport default RegistrationForm\n","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/login'\n\nconst login = async credentials => {\n  const response =  await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/users'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObject => {\n  const response = axios.post(baseUrl, newObject)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst remove = async id => {\n  const response = await axios.delete(`${baseUrl}/${id}`)\n  return response.data\n}\n\nexport default { getAll, create, update, remove }\n","import React from 'react'\nimport { Message, Container, Divider, Icon } from 'semantic-ui-react'\n\nconst Notification = ({ message, color }) => {\n  const icon = color === 'red' ? 'warning sign' : 'thumbs up'\n  const header = color === 'red' ? 'Warning!' : 'Success!'\n  if (message) {\n    return (\n      <div>\n        <Divider hidden />\n        <Message\n          icon={icon}\n          size='big'\n          color={color}\n          header={header}\n          content={message}\n          warning\n        />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default Notification\n","import React, { Component } from 'react'\nimport GoogleApiWrapper from './GoogleApiWrapper'\nimport {\n  BrowserRouter as Router,\n  withRouter,\n  Redirect,\n  Route\n} from 'react-router-dom'\nimport {\n  Container,\n  Divider,\n  Modal,\n  Header,\n  Link,\n  Image,\n  Grid,\n  Form,\n  Segment,\n  Menu,\n  Icon,\n  Button,\n  Message\n} from 'semantic-ui-react'\nimport LoginForm from './LoginForm'\nimport RegistrationForm from './RegistrationForm'\nimport travelService from './services/travels'\nimport loginService from './services/login'\nimport userService from './services/users.js'\nimport Notification from './Notification'\n\nconst inlineStyle = {\n  modal: {\n    marginTop: '-250px',\n    display: 'fixed !important'\n  }\n}\n\nexport class App extends Component {\n  state = {\n    user: null,\n    username: '',\n    newUsername: '',\n    newPassword: '',\n    newPassword2: '',\n    password: '',\n    color: '',\n    message: ''\n  }\n\n  handleFieldChange = event => {\n    this.setState({ [event.target.name]: event.target.value })\n  }\n\n  componentDidMount = async () => {\n    const loggedInUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON)\n      this.setState({ user })\n      travelService.setToken(user.token)\n    }\n  }\n\n  logout = () => {\n    travelService.setToken(null)\n    window.localStorage.removeItem('loggedInUser')\n    this.notify(`${this.state.user.username} logged out succesfully!`, 'green')\n    this.setState({ user: null })\n    console.log('hoidettu')\n  }\n\n  notify = (message, color) => {\n    this.setState({ message, color })\n    setTimeout(() => {\n      this.setState({\n        message: null,\n        color: null\n      })\n    }, 2000)\n  }\n\n  login = async event => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username: this.state.username,\n        password: this.state.password\n      })\n      console.log('KÄYTTÄJÄ', user)\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      travelService.setToken(user.token)\n      this.setState({ username: '', password: '', user: user })\n      this.notify(`${this.state.user.username} logged in succesfully!`, 'green')\n    } catch (exception) {\n      console.log(exception)\n      this.notify('invalid username or password, try again!', 'red')\n      this.setState({ username: '', password: '' })\n    }\n  }\n\n  register = async event => {\n    event.preventDefault()\n    const password = this.state.newPassword\n    if (password !== this.state.newPassword2) {\n      this.notify(\"Passwords don't match!\", 'red')\n    } else if (password.length < 3) {\n      this.notify('Password must be at least 3 characters long!', 'red')\n    } else {\n      this.createAccount()\n    }\n  }\n\n  createAccount = async () => {\n    try {\n      const user = await userService.create({\n        username: this.state.newUsername,\n        password: this.state.newPassword\n      })\n      this.notify(`account ${this.state.newUsername} created!`, 'green')\n      this.setState({\n        newUsername: '',\n        newPassword: '',\n        newPassword2: ''\n      })\n    } catch (exception) {\n      console.log(exception)\n      this.notify('server error!', 'red')\n    }\n    this.props.history.push('/login')\n  }\n\n  render() {\n    console.log('THE USER IS', this.state.user)\n    const user = this.state.user !== null\n    return (\n      <Container>\n        <Notification message={this.state.message} color={this.state.color} />\n        <Route\n          exact\n          path='/'\n          render={\n            user ? () => <Redirect to='/map' /> : () => <Redirect to='/login' />\n          }\n        />\n        <Route\n          path='/login'\n          render={\n            user\n              ? () => <Redirect to='/map' />\n              : () => (\n                  <LoginForm\n                    onSubmit={this.login}\n                    handleChange={this.handleFieldChange}\n                    username={this.state.username}\n                    password={this.state.password}\n                  />\n                )\n          }\n        />\n        <Route\n          path='/create'\n          render={\n            user\n              ? () => <Redirect to='/map' />\n              : () => (\n                  <RegistrationForm\n                    onSubmit={this.register}\n                    handleChange={this.handleFieldChange}\n                    username={this.state.newUsername}\n                    password={this.state.newPassword}\n                    password2={this.state.newPassword2}\n                  />\n                )\n          }\n        />\n        <Route\n          path='/map'\n          render={\n            user\n              ? () => (\n                  <Map\n                    user={this.state.user}\n                    logout={this.logout}\n                    settings={this.logout}\n                  />\n                )\n              : () => <Redirect to='/' />\n          }\n        />\n      </Container>\n    )\n  }\n}\n\nconst Map = ({ user, logout, settings }) => {\n  return (\n    <div>\n      <MenuExampleButtons\n        name={user.username}\n        logout={logout}\n        settings={settings}\n      />\n      <GoogleApiWrapper\n        user={user}\n        apiKey='AIzaSyCy6G0q6EnGtGPGAAvLlC37STQU4Med0xE'\n        language={'en'}\n      />\n    </div>\n  )\n}\n\nconst MenuExampleButtons = ({ name, logout, settings }) => (\n  <Menu stackable widths={4} size='huge'>\n    <Menu.Item>Welcome {name}!</Menu.Item>\n    <Menu.Item>\n      <Button onClick={settings}>Settings</Button>\n    </Menu.Item>\n    <Menu.Item>\n      <Button onClick={logout}>Log out</Button>\n    </Menu.Item>\n  </Menu>\n)\n\nexport default withRouter(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}