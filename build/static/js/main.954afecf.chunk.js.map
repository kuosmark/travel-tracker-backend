{"version":3,"sources":["services/travels.js","reducers/userReducer.js","Notification.js","reducers/messageReducer.js","reducers/loginUserReducer.js","services/login.js","LoginForm.js","services/users.js","reducers/registerUserReducer.js","RegistrationForm.js","AddForm.js","Logout.js","AddModal.js","reducers/markerInfoReducer.js","reducers/modalReducer.js","reducers/menuReducer.js","reducers/confirmReducer.js","reducers/activeMarkerReducer.js","reducers/markersReducer.js","GoogleApiWrapper.js","Map.js","App.js","store.js","index.js"],"names":["baseUrl","token","travels","getAll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","this","apply","arguments","create","_ref2","_callee2","newObject","config","_context2","headers","Authorization","post","_x","update","_ref3","_callee3","id","_context3","put","concat","_x2","_x3","remove","_ref4","_callee4","_context4","delete","_x4","setToken","newToken","loginUser","user","dispatch","type","logoutUser","reducer","store","length","undefined","action","Notification","text","color","react_default","createElement","Message","compact","header","icon","size","updateMessage","message","setTimeout","username","password","services_login","login","credentials","LoginForm","notify","_this","props","event","preventDefault","loginService","userToLogin","window","localStorage","setItem","JSON","stringify","travelService","clearLogin","t0","console","log","updateUsername","target","value","updatePassword","Form","onSubmit","Segment","Input","fluid","name","iconPosition","placeholder","onChange","Button","Component","mapDispatchToProps","connectedLoginForm","connect","state","userToRegister","services_users","password2","RegistrationForm","register","createAccount","userService","filter","clearRegister","history","push","updateRUsername","updateRPassword","updatePassword2","updateRPassword2","React","connectedRegistrationForm","withRouter","AddForm","style","overflow","Divider","hidden","Grid","centered","padded","Row","src_Notification","textAlign","Column","maxWidth","Header","as","Icon","src_LoginForm","src_RegistrationForm","Link","to","Logout","logout","removeItem","Menu","widths","borderless","Item","onClick","connectedLogout","AddModal","open","close","inlineStyle","marker","newTitle","newText","onRemoveSubmit","onEditSubmit","handleTitleChange","handleTextChange","active","setInfo","setEdit","setSettings","confirmOpen","openConfirm","closeConfirm","Confirm","textalign","content","title","cancelButton","confirmButton","onCancel","onConfirm","Modal","onClose","modal","closeIcon","tabular","verticalAlign","label","TextArea","rows","markerInfo","tab","markers","marginTop","display","MapContainer","_Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","changeTab","map","_id","position","lat","lng","initMarkers","updateTitle","updateText","updateMarker","editedMarker","updatedMarker","objectSpread","activeMarker","m","updateMarkerInfo","addActiveMarker","removeMarker","toRemove","clearMarkerInfo","clearActiveMarker","closeModal","onMarkerClick","e","clickedMarker","find","openModal","handleModalClose","onMapClicked","_ref5","_callee5","t","coord","latLng","newMarker","travel","_context5","initMarker","_x5","_x6","_x7","renderMarkers","dist","key","handleClose","inherits","createClass","height","width","flexFlow","justifyContent","padding","src_AddModal","menu","confirm","google","zoom","initialCenter","wrapper","GoogleApiWrapper","_ref6","apiKey","language","addMarker","connectedWrapper","Map","src_Logout","App","loggedInUserJSON","getItem","parse","BrowserRouter","Container","Route","exact","path","render","Redirect","src_AddForm","src_Map","connectedApp","combineReducers","messageReducer","userReducer","loginUserReducer","registerUserReducer","markerInfoReducer","modalReducer","confirmReducer","menuReducer","activeMarkerReducer","markersReducer","createStore","applyMiddleware","thunk","ReactDOM","es","src_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.954afecf.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/travels'\nlet token = null\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst remove = async id => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, update, remove, setToken }\n","const reducer = (store = null, action) => {\n  switch (action.type) {\n    case 'ADDUSER':\n      return action.user\n    case 'REMOVEUSER':\n      return null\n    default:\n      return store\n  }\n}\n\nexport const loginUser = user => dispatch => {\n  dispatch({\n    type: 'ADDUSER',\n    user\n  })\n}\n\nexport const logoutUser = () => dispatch => {\n  dispatch({\n    type: 'REMOVEUSER'\n  })\n}\n\nexport default reducer\n","import React from 'react'\nimport { Message } from 'semantic-ui-react'\n\nconst Notification = ({ text, color }) =>\n  text ? (\n    <div>\n      <Message\n        compact\n        color={color}\n        header={text}\n        icon={color === 'green' ? 'thumbs up' : 'warning sign'}\n        size='large'\n      />\n    </div>\n  ) : null\n\nexport default Notification\n","const reducer = (store = {}, action) => {\n  switch (action.type) {\n    case 'NOTIFY':\n      return action.message\n    case 'CLEAR':\n      return {}\n    default:\n      return store\n  }\n}\n\nexport const updateMessage = message => {\n  return dispatch => {\n    dispatch({\n      type: 'NOTIFY',\n      message\n    })\n    setTimeout(() => {\n      dispatch({\n        type: 'CLEAR'\n      })\n    }, 2000)\n  }\n}\n\nexport default reducer\n","const reducer = (store = {}, action) => {\n  switch (action.type) {\n    case 'CLEARLOGIN':\n      return {\n        username: '',\n        password: ''\n      }\n    case 'USERNAMELOGIN':\n      return {\n        username: action.username,\n        password: store.password\n      }\n    case 'PASSWORDLOGIN':\n      return {\n        username: store.username,\n        password: action.password\n      }\n    default:\n      return store\n  }\n}\n\nexport const updateUsername = username => dispatch => {\n  dispatch({\n    type: 'USERNAMELOGIN',\n    username: username\n  })\n}\n\nexport const updatePassword = password => dispatch => {\n  dispatch({\n    type: 'PASSWORDLOGIN',\n    password: password\n  })\n}\n\nexport const clearLogin = () => dispatch => {\n  dispatch({\n    type: 'CLEARLOGIN'\n  })\n}\n\nexport default reducer\n","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Button, Form, Segment } from 'semantic-ui-react'\nimport { updateMessage } from './reducers/messageReducer'\nimport { loginUser, logoutUser } from './reducers/userReducer'\nimport {\n  updateUsername,\n  updatePassword,\n  clearLogin\n} from './reducers/loginUserReducer'\nimport travelService from './services/travels'\nimport loginService from './services/login'\n\nclass LoginForm extends Component {\n  notify = (message, color) => {\n    this.props.updateMessage({\n      text: message,\n      color: color\n    })\n  }\n\n  login = async event => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login(this.props.userToLogin)\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      travelService.setToken(user.token)\n      this.props.clearLogin()\n      this.props.loginUser(user)\n    } catch (exception) {\n      console.log(exception)\n      this.notify('invalid username or password, try again!', 'red')\n      this.props.clearLogin()\n    }\n  }\n\n  updateUsername = event => {\n    this.props.updateUsername(event.target.value)\n  }\n\n  updatePassword = event => {\n    this.props.updatePassword(event.target.value)\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.login} size='large'>\n        <Segment>\n          <Form.Input\n            fluid\n            icon='user'\n            name='username'\n            iconPosition='left'\n            placeholder='Username'\n            value={this.props.userToLogin.username}\n            onChange={this.updateUsername}\n          />\n          <Form.Input\n            fluid\n            icon='lock'\n            name='password'\n            iconPosition='left'\n            placeholder='Password'\n            type='password'\n            value={this.props.userToLogin.password}\n            onChange={this.updatePassword}\n          />\n          <Button color='blue' fluid size='large' type='submit'>\n            Login\n          </Button>\n        </Segment>\n      </Form>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    userToLogin: state.userToLogin,\n    userToRegister: state.userToRegister\n  }\n}\n\nconst mapDispatchToProps = {\n  updateUsername,\n  updatePassword,\n  clearLogin,\n  loginUser,\n  logoutUser,\n  updateMessage\n}\n\nconst connectedLoginForm = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForm)\n\nexport default connectedLoginForm\n","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/users'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObject => {\n  const response = axios.post(baseUrl, newObject)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst remove = async id => {\n  const response = await axios.delete(`${baseUrl}/${id}`)\n  return response.data\n}\n\nexport default { getAll, create, update, remove }\n","const reducer = (\n  store = { username: '', password: '', password2: '' },\n  action\n) => {\n  switch (action.type) {\n    case 'UPDATEREG':\n      return action.userToLogin\n    case 'USERNAMEREG':\n      return {\n        username: action.username,\n        password: store.password,\n        password2: store.password2\n      }\n    case 'PASSWORDREG':\n      return {\n        username: store.username,\n        password: action.password,\n        password2: store.password2\n      }\n    case 'PASSWORD2REG':\n      return {\n        username: store.username,\n        password: store.password,\n        password2: action.password2\n      }\n    default:\n      return store\n  }\n}\n\nexport const updateRUsername = username => dispatch => {\n  dispatch({\n    type: 'USERNAMEREG',\n    username: username\n  })\n}\n\nexport const updateRPassword = password => dispatch => {\n  dispatch({\n    type: 'PASSWORDREG',\n    password: password\n  })\n}\n\nexport const updateRPassword2 = password2 => dispatch => {\n  dispatch({\n    type: 'PASSWORD2REG',\n    password2: password2\n  })\n}\n\nexport const clearRegister = () => dispatch => {\n  dispatch({\n    type: 'UPDATEREG',\n    userToLogin: {\n      username: '',\n      password: '',\n      password2: ''\n    }\n  })\n}\n\nexport default reducer\n","import React from 'react'\nimport { Button, Form, Segment } from 'semantic-ui-react'\nimport { connect } from 'react-redux'\nimport { updateMessage } from './reducers/messageReducer'\nimport { withRouter } from 'react-router-dom'\nimport { loginUser, logoutUser } from './reducers/userReducer'\nimport userService from './services/users.js'\nimport {\n  updateRUsername,\n  updateRPassword,\n  updateRPassword2,\n  clearRegister\n} from './reducers/registerUserReducer'\n\nclass RegistrationForm extends React.Component {\n  notify = (message, color) => {\n    this.props.updateMessage({\n      text: message,\n      color: color\n    })\n  }\n\n  register = async event => {\n    event.preventDefault()\n    const username = this.props.userToRegister.username\n    const password = this.props.userToRegister.password\n    const password2 = this.props.userToRegister.password2\n    if (username.length < 3) {\n      this.notify('Username must be at least 3 characters long', 'red')\n    } else if (password !== password2) {\n      this.notify(\"Passwords don't match!\", 'red')\n    } else if (password.length < 3) {\n      this.notify('Password must be at least 3 characters long!', 'red')\n    } else {\n      this.createAccount()\n    }\n  }\n\n  createAccount = async () => {\n    const users = await userService.getAll()\n    if (\n      users.filter(user => user.username === this.props.userToRegister.username)\n        .length > 0\n    ) {\n      this.notify('Username is already taken!', 'red')\n    } else {\n      try {\n        await userService.create({\n          username: this.props.userToRegister.username,\n          password: this.props.userToRegister.password\n        })\n      } catch (exception) {\n        console.log(exception)\n      }\n      this.notify(\n        `account ${this.props.userToRegister.username} created!`,\n        'green'\n      )\n      this.props.clearRegister()\n      this.props.history.push('/login')\n    }\n  }\n\n  updateUsername = event => {\n    this.props.updateRUsername(event.target.value)\n  }\n\n  updatePassword = event => {\n    this.props.updateRPassword(event.target.value)\n  }\n\n  updatePassword2 = event => {\n    this.props.updateRPassword2(event.target.value)\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.register} size='large'>\n        <Segment>\n          <Form.Input\n            fluid\n            icon='user'\n            name='newUsername'\n            iconPosition='left'\n            placeholder='Username'\n            value={this.props.userToRegister.username}\n            onChange={this.updateUsername}\n          />\n          <Form.Input\n            fluid\n            icon='lock'\n            name='newPassword'\n            iconPosition='left'\n            placeholder='Password'\n            type='password'\n            value={this.props.userToRegister.password}\n            onChange={this.updatePassword}\n          />\n          <Form.Input\n            fluid\n            icon='lock'\n            name='newPassword2'\n            iconPosition='left'\n            placeholder='Repeat password'\n            type='password'\n            value={this.props.userToRegister.password2}\n            onChange={this.updatePassword2}\n          />\n          <Button color='blue' fluid size='large' type='submit'>\n            Submit\n          </Button>\n        </Segment>\n      </Form>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    userToLogin: state.userToLogin,\n    userToRegister: state.userToRegister,\n    message: state.message\n  }\n}\n\nconst mapDispatchToProps = {\n  clearRegister,\n  updateRPassword,\n  updateRPassword2,\n  updateRUsername,\n  loginUser,\n  logoutUser,\n  updateMessage\n}\n\nconst connectedRegistrationForm = withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(RegistrationForm)\n)\n\nexport default connectedRegistrationForm\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, Icon, Header, Divider, Message } from 'semantic-ui-react'\nimport Notification from './Notification'\nimport LoginForm from './LoginForm'\nimport RegistrationForm from './RegistrationForm'\n\nconst AddForm = ({ login, text, color }) => (\n  <div style={{ overflow: 'hidden' }}>\n    <Divider hidden />\n    <Grid centered padded>\n      <Grid.Row>\n        <Notification text={text} color={color} />\n      </Grid.Row>\n    </Grid>\n    <Divider hidden />\n    {text ? null : (\n      <div>\n        <Divider hidden />\n        <Divider hidden />\n        <Divider hidden />\n        <Divider hidden />\n        <Divider hidden />\n      </div>\n    )}\n    <Grid textAlign='center'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as='h2' color='blue'>\n          <Icon name={login ? 'plane' : 'user circle'} />\n          {login ? 'Log in to account' : 'Create new account'}\n        </Header>\n        {login ? <LoginForm /> : <RegistrationForm />}\n        <Message>\n          <Link to={login ? '/register' : '/login'}>\n            {login ? 'Create new account' : 'Log in to account'}\n          </Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n    <Divider hidden />\n  </div>\n)\n\nexport default AddForm\n","import React, { Component } from 'react'\nimport { Menu, Icon, Button } from 'semantic-ui-react'\nimport travelService from './services/travels'\nimport { connect } from 'react-redux'\nimport { loginUser, logoutUser } from './reducers/userReducer'\n\nclass Logout extends Component {\n  logout = () => {\n    travelService.setToken(null)\n    window.localStorage.removeItem('loggedInUser')\n    this.props.logoutUser()\n  }\n\n  render() {\n    return (\n      <div>\n        <Menu fluid widths={3} borderless size='huge'>\n          <Menu.Item>\n            <Button color='blue' onClick={this.logout} size='large'>\n              <Icon name='log out' />\n              Log out\n            </Button>\n          </Menu.Item>\n        </Menu>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    userToLogin: state.userToLogin,\n    userToRegister: state.userToRegister,\n    message: state.message\n  }\n}\n\nconst mapDispatchToProps = {\n  loginUser,\n  logoutUser\n}\n\nconst connectedLogout = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Logout)\n\nexport default connectedLogout\n","import React from 'react'\nimport {\n  Modal,\n  Header,\n  Form,\n  Grid,\n  Divider,\n  Confirm,\n  Menu,\n  Button,\n  Icon\n} from 'semantic-ui-react'\n\nconst AddModal = ({\n  open,\n  close,\n  inlineStyle,\n  marker,\n  newTitle,\n  newText,\n  onRemoveSubmit,\n  onEditSubmit,\n  handleTitleChange,\n  handleTextChange,\n  active,\n  setInfo,\n  setEdit,\n  setSettings,\n  confirmOpen,\n  openConfirm,\n  closeConfirm\n}) => (\n  <div>\n    <Confirm\n      centered={false}\n      header='WARNING!'\n      textalign='middle'\n      content={\n        marker.text.length === 0 && marker.title.length === 0\n          ? 'Do you want to remove the empty marker?'\n          : 'Are you sure?'\n      }\n      cancelButton='Never mind'\n      confirmButton=\"Let's do it\"\n      open={confirmOpen}\n      onCancel={closeConfirm}\n      onConfirm={onRemoveSubmit}\n    />\n    <Modal\n      open={open}\n      onClose={close}\n      style={inlineStyle.modal}\n      closeIcon>\n      <div>\n        <Menu icon='labeled' fluid widths={3} tabular size='huge' color='blue'>\n          <Menu.Item name='info' active={active === 'info'} onClick={setInfo}>\n            <Icon name='book' />\n            Info\n          </Menu.Item>\n          <Menu.Item name='edit' active={active === 'edit'} onClick={setEdit}>\n            <Icon name='edit' />\n            Edit\n          </Menu.Item>\n          <Menu.Item\n            name='settings'\n            active={active === 'settings'}\n            onClick={setSettings}>\n            <Icon name='trash' />\n            Remove\n          </Menu.Item>\n        </Menu>\n        <Divider hidden />\n        <Divider hidden />\n        <Divider hidden />\n        {active === 'info' ? (\n          <div>\n            <div>\n              <Grid centered verticalAlign='middle'>\n                <Grid.Row>\n                  <Header as='h1' textAlign='center'>\n                    <Divider hidden />\n                    {newTitle.length > 0 ? marker.title : ''}\n                  </Header>\n                </Grid.Row>\n                <Grid.Row>\n                  <Header as='h3'>{marker.text}</Header>\n                </Grid.Row>\n              </Grid>\n            </div>\n          </div>\n        ) : active === 'edit' ? (\n          <div>\n            <Grid centered verticalAlign='middle'>\n              <Grid.Column style={{ maxWidth: 450 }}>\n                <Form onSubmit={onEditSubmit} size='large'>\n                  <Form.Input\n                    name='newTitle'\n                    label='Edit title'\n                    value={newTitle}\n                    onChange={handleTitleChange}\n                  />\n                  <Form.TextArea\n                    name='newText'\n                    label='Additional information'\n                    value={newText}\n                    rows={4}\n                    onChange={handleTextChange}\n                  />\n                  <Button color='blue' fluid size='large' type='submit'>\n                    Update\n                  </Button>\n                </Form>\n              </Grid.Column>\n            </Grid>\n          </div>\n        ) : (\n          <div>\n            <Divider hidden />\n            <Grid padded centered verticalAlign='middle'>\n              <Button\n                size='large'\n                centered='top'\n                color='blue'\n                type='submit'\n                onClick={openConfirm}>\n                Remove marker\n              </Button>\n            </Grid>\n            <Divider hidden />\n          </div>\n        )}\n        <Divider hidden />\n        <Divider hidden />\n        <Divider hidden />\n      </div>\n    </Modal>\n  </div>\n)\n\nexport default AddModal\n","const reducer = (store = { title: '', text: '' }, action) => {\n  switch (action.type) {\n    case 'UPDATEMARKER':\n      return action.markerInfo\n    case 'CLEARMARKER':\n      return {\n        title: '',\n        text: ''\n      }\n    case 'UPDATETITLE':\n      return {\n        title: action.title,\n        text: store.text\n      }\n    case 'UPDATETEXT':\n      return {\n        title: store.title,\n        text: action.text\n      }\n    default:\n      return store\n  }\n}\n\nexport const updateMarkerInfo = markerInfo => dispatch => {\n  dispatch({\n    type: 'UPDATEMARKER',\n    markerInfo: markerInfo\n  })\n}\n\nexport const clearMarkerInfo = () => dispatch => {\n  dispatch({\n    type: 'CLEARMARKER'\n  })\n}\n\nexport const updateTitle = title => dispatch => {\n  dispatch({\n    type: 'UPDATETITLE',\n    title: title\n  })\n}\n\nexport const updateText = text => dispatch => {\n  dispatch({\n    type: 'UPDATETEXT',\n    text: text\n  })\n}\n\nexport default reducer\n","const reducer = (store = false, action) => {\n  switch (action.type) {\n    case 'OPENMODAL':\n      return true\n    case 'CLOSEMODAL':\n      return false\n    default:\n      return store\n  }\n}\n\nexport const openModal = () => dispatch => {\n  dispatch({\n    type: 'OPENMODAL'\n  })\n}\n\nexport const closeModal = () => dispatch => {\n  dispatch({\n    type: 'CLOSEMODAL'\n  })\n}\n\nexport default reducer\n","const reducer = (store = '', action) => {\n  switch (action.type) {\n    case 'CHANGETAB':\n      return action.tab\n    default:\n      return store\n  }\n}\n\nexport const changeTab = tab => dispatch => {\n  dispatch({\n    type: 'CHANGETAB',\n    tab: tab\n  })\n}\n\nexport default reducer\n","const reducer = (store = false, action) => {\n  switch (action.type) {\n    case 'OPENCONFIRM':\n      return true\n    case 'CLOSECONFIRM':\n      return false\n    default:\n      return store\n  }\n}\n\nexport const openConfirm = () => dispatch => {\n  dispatch({\n    type: 'OPENCONFIRM'\n  })\n}\n\nexport const closeConfirm = () => dispatch => {\n  dispatch({\n    type: 'CLOSECONFIRM'\n  })\n}\n\nexport default reducer\n","const reducer = (store = { title: '', text: '' }, action) => {\n  switch (action.type) {\n    case 'ADDMARKER':\n      return action.marker\n    case 'REMOVEMARKER':\n      return { title: '', text: '' }\n    default:\n      return store\n  }\n}\n\nexport const addActiveMarker = marker => dispatch => {\n  dispatch({\n    type: 'ADDMARKER',\n    marker\n  })\n}\n\nexport const clearActiveMarker = () => dispatch => {\n  dispatch({\n    type: 'REMOVEMARKER'\n  })\n}\n\nexport default reducer\n","const reducer = (store = [], action) => {\n  switch (action.type) {\n    case 'UPDATE':\n      return action.markers\n    default:\n      return store\n  }\n}\n\nexport const initMarkers = markers => dispatch => {\n  dispatch({\n    type: 'UPDATE',\n    markers\n  })\n}\n\nexport const addMarker = marker => dispatch => {\n  const markers = this.store.markers\n  dispatch({\n    type: 'UPDATE',\n    markers: markers.concat(marker)\n  })\n}\n\nexport default reducer\n","import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\nimport travelService from './services/travels'\nimport AddModal from './AddModal'\nimport { connect } from 'react-redux'\nimport {\n  updateMarkerInfo,\n  clearMarkerInfo,\n  updateText,\n  updateTitle\n} from './reducers/markerInfoReducer'\nimport { openModal, closeModal } from './reducers/modalReducer'\nimport { changeTab } from './reducers/menuReducer'\nimport { openConfirm, closeConfirm } from './reducers/confirmReducer'\nimport {\n  addActiveMarker,\n  clearActiveMarker\n} from './reducers/activeMarkerReducer'\nimport { initMarkers, addMarker } from './reducers/markersReducer'\n\nconst inlineStyle = {\n  modal: {\n    marginTop: '-250px',\n    display: 'fixed !important'\n  }\n}\n\nexport class MapContainer extends Component {\n  componentDidMount = async () => {\n    this.props.changeTab('info')\n    const data = await travelService.getAll()\n    const markers = data.map(marker => {\n      return {\n        user: marker.user._id,\n        id: marker.id,\n        title: marker.title,\n        text: marker.text,\n        position: { lat: marker.position.lat, lng: marker.position.lng }\n      }\n    })\n    this.props.initMarkers(markers)\n  }\n\n  open = () => this.props.openConfirm()\n  close = () => this.props.closeConfirm()\n\n  handleTitleChange = event => {\n    this.props.updateTitle(event.target.value)\n  }\n\n  handleTextChange = event => {\n    this.props.updateText(event.target.value)\n  }\n\n  updateMarker = async event => {\n    const editedMarker = {\n      ...this.props.activeMarker,\n      title: this.props.markerInfo.title,\n      text: this.props.markerInfo.text\n    }\n    const updatedMarker = await travelService.update(\n      editedMarker.id,\n      editedMarker\n    )\n    const markers = this.props.markers.filter(m => m.id !== editedMarker.id)\n    this.props.initMarkers(markers)\n    this.props.updateMarkerInfo({\n      title: updatedMarker.title,\n      text: updatedMarker.text\n    })\n    this.props.changeTab('info')\n    this.props.addActiveMarker(updatedMarker)\n    this.props.initMarkers(this.props.markers.concat(updatedMarker))\n  }\n\n  removeMarker = async () => {\n    const toRemove = this.props.activeMarker\n    try {\n      await travelService.remove(toRemove.id)\n      const markers = this.props.markers.filter(m => m.id !== toRemove.id)\n      this.props.initMarkers(markers)\n    } catch (exception) {\n      console.log(exception)\n    }\n    this.props.clearMarkerInfo()\n    this.props.closeConfirm()\n    this.props.clearActiveMarker()\n    this.props.closeModal()\n  }\n\n  onMarkerClick = async (props, marker, e) => {\n    const lat = props.position.lat\n    const lng = props.position.lng\n    const clickedMarker = this.props.markers.find(\n      marker => marker.position.lat === lat && marker.position.lng === lng\n    )\n    this.props.updateMarkerInfo({\n      title: clickedMarker.title,\n      text: clickedMarker.text\n    })\n    this.props.addActiveMarker(clickedMarker)\n    this.props.openModal()\n    this.props.changeTab('info')\n  }\n\n  handleModalClose = props => {\n    if (\n      this.props.activeMarker.title.length === 0 &&\n      this.props.activeMarker.text.length === 0\n    ) {\n      this.open()\n    } else {\n      this.props.clearMarkerInfo()\n      this.props.clearActiveMarker()\n      this.props.closeModal()\n    }\n  }\n\n  onMapClicked = async (t, map, coord) => {\n    const { latLng } = coord\n    const lat = latLng.lat()\n    const lng = latLng.lng()\n    const newMarker = {\n      user: this.props.user.id,\n      title: '',\n      text: '',\n      position: {\n        lat,\n        lng\n      }\n    }\n    try {\n      const travel = await travelService.create(newMarker)\n      this.props.updateMarkerInfo({\n        title: travel.title,\n        text: travel.text\n      })\n      this.props.changeTab('edit')\n      this.props.addActiveMarker(travel)\n      this.props.openModal()\n      this.props.initMarker(this.props.markers.concat(travel))\n    } catch (exception) {\n      console.log(exception)\n    }\n  }\n\n  renderMarkers = () => {\n    console.log(this.props.markers)\n    const markers = this.props.markers\n    const filtered = markers.filter(m => m.user === this.props.user.id)\n    return filtered.map(marker => (\n      <Marker\n        key={marker.id}\n        title={marker.title}\n        name={marker.text}\n        position={marker.position}\n        onClick={this.onMarkerClick}\n      />\n    ))\n  }\n\n  handleClose = () => this.props.closeModal()\n  setInfo = () => this.props.changeTab('menu')\n  setEdit = () => this.props.changeTab('edit')\n  setSettings = () => this.props.changeTab('settings')\n\n  render() {\n    return (\n      <div\n        style={{\n          height: '100%',\n          width: '100%',\n          display: 'flex',\n          flexFlow: 'row nowrap',\n          justifyContent: 'center',\n          padding: 0\n        }}>\n        <AddModal\n          open={this.props.modal}\n          close={this.handleModalClose}\n          inlineStyle={inlineStyle}\n          marker={this.props.activeMarker}\n          newTitle={this.props.markerInfo.title}\n          newText={this.props.markerInfo.text}\n          onRemoveSubmit={this.removeMarker}\n          onEditSubmit={this.updateMarker}\n          handleTitleChange={this.handleTitleChange}\n          handleTextChange={this.handleTextChange}\n          active={this.props.menu}\n          setInfo={this.setInfo}\n          setEdit={this.setEdit}\n          setSettings={this.setSettings}\n          confirmOpen={this.props.confirm}\n          openConfirm={this.open}\n          closeConfirm={this.close}\n        />\n        <Map\n          google={this.props.google}\n          zoom={2}\n          initialCenter={{ lat: 0, lng: 0 }}\n          onClick={this.onMapClicked}>\n          {this.renderMarkers()}\n        </Map>\n      </div>\n    )\n  }\n}\n\nconst wrapper = GoogleApiWrapper(({ apiKey, language }) => ({\n  apiKey: apiKey,\n  language: language\n}))(MapContainer)\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    markerInfo: state.markerInfo,\n    modal: state.modal,\n    confirm: state.confirm,\n    menu: state.menu,\n    activeMarker: state.activeMarker,\n    markers: state.markers\n  }\n}\n\nconst mapDispatchToProps = {\n  updateText,\n  updateTitle,\n  clearMarkerInfo,\n  updateMarkerInfo,\n  openModal,\n  closeModal,\n  openConfirm,\n  closeConfirm,\n  changeTab,\n  addActiveMarker,\n  clearActiveMarker,\n  initMarkers,\n  addMarker\n}\n\nconst connectedWrapper = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(wrapper)\n\nexport default connectedWrapper\n","import React from 'react'\nimport Logout from './Logout'\nimport GoogleApiWrapper from './GoogleApiWrapper'\n\nconst Map = () => (\n  <div>\n    <GoogleApiWrapper\n      apiKey='AIzaSyCy6G0q6EnGtGPGAAvLlC37STQU4Med0xE'\n      language={'en'}\n    />\n    <Logout />\n  </div>\n)\n\nexport default Map\n","import React, { Component } from 'react'\nimport { Redirect, Route, BrowserRouter as Router } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { Container } from 'semantic-ui-react'\nimport travelService from './services/travels'\nimport { loginUser } from './reducers/userReducer'\nimport AddForm from './AddForm'\nimport Map from './Map'\n\nexport class App extends Component {\n  componentDidMount = async () => {\n    const loggedInUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON)\n      this.props.loginUser(user)\n      travelService.setToken(user.token)\n    }\n  }\n\n  render() {\n    const user = this.props.user\n    const text = this.props.text\n    const color = this.props.color\n    return (\n      <Router>\n        <Container>\n          <Route exact path='/' render={() => <Redirect to='/login' />} />\n          <Route\n            path='/login'\n            render={\n              user\n                ? () => <Redirect to='/map' />\n                : () => <AddForm login={true} text={text} color={color} />\n            }\n          />\n          <Route\n            path='/register'\n            render={\n              user\n                ? () => <Redirect to='/map' />\n                : () => <AddForm login={false} text={text} color={color} />\n            }\n          />\n          <Route\n            path='/map'\n            render={user ? () => <Map /> : () => <Redirect to='/login' />}\n          />\n        </Container>\n      </Router>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    text: state.message.text,\n    color: state.message.color\n  }\n}\n\nconst mapDispatchToProps = {\n  loginUser\n}\n\nconst connectedApp = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n\nexport default connectedApp\n","import thunk from 'redux-thunk'\nimport { createStore, combineReducers, applyMiddleware } from 'redux'\nimport messageReducer from './reducers/messageReducer'\nimport userReducer from './reducers/userReducer'\nimport loginUserReducer from './reducers/loginUserReducer'\nimport registerUserReducer from './reducers/registerUserReducer'\nimport markerInfoReducer from './reducers/markerInfoReducer'\nimport modalReducer from './reducers/modalReducer'\nimport menuReducer from './reducers/menuReducer'\nimport confirmReducer from './reducers/confirmReducer'\nimport activeMarkerReducer from './reducers/activeMarkerReducer'\nimport markersReducer from './reducers/markersReducer'\n\nconst reducer = combineReducers({\n  message: messageReducer,\n  user: userReducer,\n  userToLogin: loginUserReducer,\n  userToRegister: registerUserReducer,\n  markerInfo: markerInfoReducer,\n  modal: modalReducer,\n  confirm: confirmReducer,\n  menu: menuReducer,\n  activeMarker: activeMarkerReducer,\n  markers: markersReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrender()\nstore.subscribe(render)\n"],"sourceRoot":""}