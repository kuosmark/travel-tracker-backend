{"version":3,"sources":["GoogleApiWrapper.js","components/Images.js","LoginForm.js","CreateForm.js","services/travels.js","services/login.js","App.js","index.js"],"names":["mapStyles","width","height","inlineStyle","modal","marginTop","display","MapContainer","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","showingInfoWindow","activeMarker","selectedPlace","modalOpen","markers","title","name","position","lat","lng","onMarkerClick","props","marker","e","setState","onClose","onMapClicked","t","map","coord","latLng","renderMarkers","react_default","a","createElement","dist","onClick","handleOpen","handleClose","inherits","createClass","key","value","Modal","open","style","closeIcon","Header","Content","image","Image","wrapped","size","src","Description","google","zoom","initialCenter","Component","GoogleApiWrapper","_ref","apiKey","language","Container","LoginForm","onSubmit","handleChange","username","password","className","Grid","textAlign","verticalAlign","Column","maxWidth","as","color","Icon","Form","Segment","Input","fluid","icon","iconPosition","placeholder","defaultValue","onChange","type","Button","tyoe","Message","Link","to","CreateForm","token","travels","getAll","asyncToGenerator","regenerator_default","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","create","_ref2","_callee2","newObject","config","_context2","headers","Authorization","post","_x","update","_ref3","_callee3","id","_context3","put","_x2","_x3","remove","_ref4","_callee4","_context4","delete","_x4","setToken","newToken","services_login","login","credentials","App","user","message","handleFieldChange","event","console","log","defineProperty","target","componentDidMount","loggedInUserJSON","window","localStorage","getItem","JSON","parse","travelService","logout","removeItem","notify","setTimeout","preventDefault","loginService","setItem","stringify","t0","_this2","BrowserRouter","Route","exact","path","render","Redirect","src_LoginForm","src_CreateForm","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.8e344e44.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react'\nimport { Item, Grid, Link, Icon, Image, Header, Modal, Button } from 'semantic-ui-react'\n\nconst mapStyles = {\n  width: '100%',\n  height: '100%'\n}\n\nconst inlineStyle = {\n  modal : {\n    \n    marginTop: '-250px',\n    display: 'fixed !important'\n  }\n}\n\nexport class MapContainer extends Component {\n  state = {\n    showingInfoWindow: false,  //Hides or the shows the infoWindow\n    activeMarker: {},          //Shows the active marker upon click\n    selectedPlace: {},         //Shows the infoWindow to the selected place upon a marker\n    modalOpen: false,\n    markers: [{\n      title: \"Tässä on nuppi\",\n      name: \"The marker`s title will appear as a tooltip.\",\n      position: { lat: 37.778519, lng: -122.40564 }\n    }]\n  }\n\n  onMarkerClick = (props, marker, e) =>\n    this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true,\n      modalOpen: true\n    })\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: null\n      })\n    }\n  }\n\n  onMapClicked = (t, map, coord) => {\n    const { latLng } = coord\n    const lat = latLng.lat()\n    const lng = latLng.lng()\n    this.setState({\n      markers: this.state.markers.concat({\n        title: 'Tässä on nuppi!',\n        name: 'Tähän tulee vaikka minkälaista tekstiä',\n        position: { lat: lat, lng: lng }\n      })\n    })\n  }\n\n  renderMarkers = () => {\n    const markers = this.state.markers\n    return markers.map(marker => <Marker\n      name={marker.name}\n      position={marker.position}\n      onClick={this.onMarkerClick} />)\n  }\n\n  handleOpen = () => this.setState({ modalOpen: true })\n\n  handleClose = () => this.setState({ modalOpen: false })\n\n  render() {\n    return (<div>\n      <Modal\n        open={this.state.modalOpen}\n        onClose={this.handleClose}\n        style={inlineStyle.modal}\n        closeIcon\n      >    <Modal.Header>Select a Photo</Modal.Header>\n        <Modal.Content image>\n          <Image wrapped size='medium' src='https://react.semantic-ui.com/images/avatar/large/rachel.png' />\n          <Modal.Description>\n            <Header>Default Profile Image</Header>\n            <p>We've found the following gravatar image associated with your e-mail address.</p>\n            <p>Is it okay to use this photo?</p>\n          </Modal.Description>\n        </Modal.Content>\n      </Modal>\n      <Map google={this.props.google}\n        zoom={2}\n        style={mapStyles}\n        initialCenter={{ lat: 0, lng: 0 }}\n        onClick={this.onMapClicked}>\n        {/*<InfoWindow\n          marker={this.state.activeMarker}\n          visible={this.state.showingInfoWindow}\n          onClose={this.onClose}\n          size='big'>\n          <Item relaxed>\n            <div>{this.state.activeMarker === null ?\n              <h4>...</h4>\n              :\n              <div><h2>{this.state.activeMarker.title}</h2>\n                <h4>{this.state.activeMarker.name}</h4></div>\n            }<Button icon>\n                <Icon name='expand'\n                />\n              </Button></div>\n          </Item>\n          </InfoWindow>*/}\n        {this.renderMarkers()}\n      </Map ></div>)\n  }\n}\n\nexport default GoogleApiWrapper(({ apiKey, language }) => ({\n  apiKey: apiKey,\n  language: language\n}))(MapContainer)\n\n\n","import React from 'react'\nimport { Container, Divider, Image } from 'semantic-ui-react'\n\nconst Images = [\n  <Container>\n  </Container>\n]\n\nexport default Images\n","import React from 'react'\nimport {\n  Button,\n  Form,\n  Grid,\n  Icon,\n  Header,\n  Image,\n  Message,\n  Segment\n} from 'semantic-ui-react'\nimport {Link} from 'react-router-dom'\n\nconst LoginForm = ({ onSubmit, handleChange, username, password }) => {\n  return (\n    <div className='login-form'>\n      <style>{`\n      body > div,\n      body > div > div,\n      body > div > div > div.login-form {\n        height: 100%;\n      }\n    `}</style>\n      <Grid\n        textAlign='center'\n        style={{ height: '100%' }}\n        verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='blue' textAlign='center'>\n            <Icon name='plane' /> Log in to account\n          </Header>\n          <Form\n            onSubmit={onSubmit}\n            size='large' /*loading success error field error*/\n          >\n            <Segment>\n              <Form.Input\n                fluid\n                icon='user'\n                name='username'\n                iconPosition='left'\n                placeholder='Username'\n                defaultValue={username}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                name='password'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n                defaultValue={password}\n                onChange={handleChange}\n              />\n\n              <Button color='blue' fluid size='large' tyoe='submit'>\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            <Link to='/create'>Create Account</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n}\nexport default LoginForm\n\n/*import React from 'react'\nimport Blog from './components/Blog'\nimport Togglable from './components/Togglable'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport loginService from './services/login'\nimport blogService from './services/blogs'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: '',\n      password: '',\n      blogs: [],\n      user: null,\n      loginVisible: false,\n      message: '',\n      color: ''\n    }\n  }\n\n    const data = await blogService.getAll()\n    const blogs = data\n      .sort(compare)\n      .map(blog =>\n        <Blog\n          key={blog.id}\n          id={blog.id}\n          user={blog.user}\n          likes={blog.likes}\n          author={blog.author}\n          title={blog.title}\n          url={blog.url}\n        />\n      )\n\n    this.setState({ blogs })\n\n    const loggedInUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON)\n      this.setState({ user })\n      blogService.setToken(user.token)\n    }\n  }\n\n  handleFieldChange = (event) => this.setState({ [event.target.name]: event.target.value })\n\n  login = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username: this.state.username,\n        password: this.state.password\n      })\n\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      blogService.setToken(user.token)\n      this.setState({ username: '', password: '', user: user })\n      this.notify(`${this.state.user.username} logged in succesfully!`, 'green')\n    } catch (exception) {\n      console.log(exception)\n      this.notify('invalid username or password!', 'red')\n    }\n  }\n\n  logout = () => () => {\n    blogService.setToken(null)\n    window.localStorage.removeItem('loggedInUser')\n    this.notify(`${this.state.user.username} logged out succesfully!`, 'green')\n    this.setState({ user: null })\n  }\n\n  addBlog = () => () => {\n    const newBlog = {\n      title: this.state.newTitle,\n      author: this.state.newAuthor,\n      url: this.state.newUrl\n    }\n    blogService.create(newBlog)\n  }\n\n  notify = (message, color) => {\n    this.setState({ message, color })\n    setTimeout(() => {\n      this.setState({\n        message: null,\n        color: null\n      })\n    }, 2000)\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>BLOG LIST</h1>\n        <Notification message={this.state.message} color={this.state.color} />\n        {this.state.user === null ?\n          <div>\n            <Togglable buttonLabel=\"login\">\n              <LoginForm\n                onSubmit={this.login}\n                handleChange={this.handleFieldChange}\n                username={this.state.username}\n                password={this.state.password} />\n            </Togglable>\n          </div> :\n          <div>\n            <h2>{this.state.user.username} logged in <button onClick={this.logout()}>logout</button></h2>\n            <Togglable buttonLabel=\"new blog\">\n              <BlogForm\n                onSubmit={this.addBlog()}\n                handleChange={this.handleFieldChange}\n                title={this.state.newTitle}\n                author={this.state.newAuthor}\n                url={this.state.newUrl} />\n            </Togglable>\n            <h2>Blogs</h2>\n            {this.state.blogs}\n          </div>}\n      </div>\n    )\n  }\n}\n\nexport default App\n*/\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst CreateForm = () => {\n  return (\n    <div>\n      Create an account!\n      <Link to={'/login'}>Return</Link>\n    </div>\n  )\n}\n\nexport default CreateForm\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\nlet token = null\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { 'Authorization': token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { 'Authorization': token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, update, remove, setToken }\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async (credentials) => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","import React, { Component } from 'react'\nimport GoogleApiWrapper from './GoogleApiWrapper'\nimport { BrowserRouter as Router, Redirect, Route } from 'react-router-dom'\nimport {\n  Container,\n  Divider,\n  Modal,\n  Header,\n  Link,\n  Image,\n  Grid,\n  Form,\n  Segment,\n  Icon,\n  Button,\n  Message\n} from 'semantic-ui-react'\nimport dataService from './services/Data'\nimport AddMenu from './components/AddMenu'\nimport AddRouting from './components/AddRouting'\nimport LoginForm from './LoginForm'\nimport CreateForm from './CreateForm'\nimport travelService from './services/travels'\nimport loginService from './services/login'\nimport Notification from './Notification'\n\nconst inlineStyle = {\n  modal: {\n    marginTop: '-250px',\n    display: 'fixed !important'\n  }\n}\n\nexport class App extends Component {\n  state = {\n    user: null,\n    username: '',\n    password: '',\n    color: '',\n    message: ''\n  }\n\n  handleFieldChange = event => {\n    console.log('here')\n    this.setState({ [event.target.name]: event.target.defaultValue })\n  }\n  componentDidMount = async () => {\n    /*const data = await blogService.getAll()\n    const blogs = data\n      .sort(compare)\n      .map(blog =>\n        <Blog\n          key={blog.id}\n          id={blog.id}\n          user={blog.user}\n          likes={blog.likes}\n          author={blog.author}\n          title={blog.title}\n          url={blog.url}\n        />\n      )\n\n    this.setState({ blogs })*/\n\n    const loggedInUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON)\n      this.setState({ user })\n      travelService.setToken(user.token)\n    }\n  }\n\n  logout = () => () => {\n    travelService.setToken(null)\n    window.localStorage.removeItem('loggedInUser')\n    this.notify(`${this.state.user.username} logged out succesfully!`, 'green')\n    this.setState({ user: null })\n  }\n\n  notify = (message, color) => {\n    this.setState({ message, color })\n    setTimeout(() => {\n      this.setState({\n        message: null,\n        color: null\n      })\n    }, 2000)\n  }\n\n  login = async event => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username: this.state.username,\n        password: this.state.password\n      })\n\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      travelService.setToken(user.token)\n      this.setState({ username: '', password: '', user: user })\n      this.notify(`${this.state.user.username} logged in succesfully!`, 'green')\n    } catch (exception) {\n      console.log(exception)\n      this.notify('invalid username or password!', 'red')\n    }\n  }\n\n  render() {\n    console.log(this.state.username, this.state.password)\n    return (\n      <Router>\n        {/*this.state.user !== null ? (\n          <GoogleApiWrapper\n            apiKey='AIzaSyCy6G0q6EnGtGPGAAvLlC37STQU4Med0xE'\n            language={'en'}\n          />\n        ) : (\n          <div>\n            <Notification\n              message={this.state.message}\n              color={this.state.color}\n            />\n            <LoginForm\n              onSubmit={this.login}\n              handleChange={this.handleFieldChange}\n              username={this.state.username}\n              password={this.state.password}\n            />\n          </div>\n        )*/}\n\n        <Container>\n          <Route exact path='/' render={() => <Redirect to='/login' />} />\n          <Route\n            path='/login'\n            render={() => (\n              <LoginForm\n                onSubmit={this.login}\n                handleChange={this.handleFieldChange}\n                username={this.state.username}\n                password={this.state.password}\n              />\n            )}\n          />\n          <Route path='/create' render={() => <CreateForm />} />\n        </Container>\n      </Router>\n    )\n  }\n}\n\n/*class App extends Component {\n  state = {\n    english: false,\n    data: {\n      en: { bio: [], skills: [], experience: [] },\n      fi: { bio: [], skills: [], experience: [] }\n    }\n  }\n\n  async componentWillMount() {\n    const data = await dataService.getData()\n    this.setState({ data })\n  }\n\n  changeLanguage = () => this.setState({ english: !this.state.english })\n\n  render() {\n    return (\n      <Router>\n        <Container>\n          <Divider hidden />\n          <AddMenu en={this.state.english} change={this.changeLanguage} />\n          <Divider hidden />\n          <Divider hidden />\n          <AddRouting en={this.state.english} data={this.state.data} />\n          <Divider hidden />\n          <Divider hidden />\n          <Divider hidden />\n        </Container>\n      </Router>\n    )\n  }\n}*/\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}