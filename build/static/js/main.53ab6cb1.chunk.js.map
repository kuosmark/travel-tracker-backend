{"version":3,"sources":["services/markers.js","reducers/userReducer.js","reducers/registerFormReducer.js","Notification.js","services/login.js","reducers/messageReducer.js","reducers/loginFormReducer.js","LoginForm.js","services/users.js","RegistrationForm.js","Forms.js","reducers/infoWindowReducer.js","reducers/menuTabReducer.js","reducers/confirmationReducer.js","reducers/markerFormReducer.js","reducers/activeMarkerReducer.js","reducers/markerReducer.js","InfoWindow.js","GoogleMaps.js","Logout.js","Map.js","App.js","store.js","index.js"],"names":["baseUrl","token","services_markers","getAll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","this","apply","arguments","create","_ref2","_callee2","newObject","config","_context2","headers","Authorization","post","_x","update","_ref3","_callee3","id","_context3","put","concat","_x2","_x3","remove","_ref4","_callee4","_context4","delete","_x4","setToken","newToken","login","user","dispatch","type","reducer","store","length","undefined","action","clearForm","username","password","password2","objectSpread","Notification","text","color","react_default","createElement","Message","compact","header","icon","size","services_login","credentials","showMessage","message","setTimeout","LoginForm","event","preventDefault","loginService","_this","props","window","localStorage","setItem","JSON","stringify","travelService","t0","console","log","updateUsername","target","value","updatePassword","Form","onSubmit","Segment","Input","iconPosition","placeholder","onChange","Button","fluid","Component","mapDispatchToProps","connectedLoginForm","connect","state","loginForm","users","RegistrationForm","register","createAccount","userService","history","push","e","updatePassword2","React","connectedRegistrationForm","withRouter","registerForm","Forms","style","overflow","Divider","hidden","Grid","centered","padded","Row","src_Notification","textAlign","Column","maxWidth","Header","as","Icon","name","src_LoginForm","src_RegistrationForm","Link","to","changeTab","tab","updateForm","form","title","addActiveMarker","marker","markers","toConsumableArray","filter","m","InfoWindow","updateMarker","activeMarker","formTitle","formText","markerService","replaceMarker","removeMarker","closeConfirmation","removeActiveMarker","closeWindow","onClose","emptyForm","openConfirmation","activeTitle","activeText","onTitleChange","updateTitle","onTextChange","updateText","_this2","Confirm","content","cancelButton","confirmButton","open","confirmation","onCancel","onConfirm","marginTop","Modal","infoWindow","closeIcon","Menu","widths","tabular","Item","active","menuTab","onClick","verticalAlign","label","TextArea","rows","connectedInfoWindow","markerForm","GoogleMaps","_Component","_getPrototypeOf2","classCallCheck","_len","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","map","_id","position","lat","lng","initMarkers","onMapClick","t","coord","latLng","markerData","addMarker","openWindow","onMarkerClick","find","renderMarkers","dist","key","inherits","createClass","display","justifyContent","src_InfoWindow","google","zoom","initialCenter","wrapper","GoogleApiWrapper","apiKey","language","connectedWrapper","Logout","logout","borderless","Map","src_GoogleMaps","process","src_Logout","App","loggedInUserJSON","getItem","parse","removeItem","BrowserRouter","Container","Route","exact","path","render","Redirect","src_Forms","src_Map","connectedApp","combineReducers","userReducer","messageReducer","loginFormReducer","registerFormReducer","infoWindowReducer","menuTabReducer","confirmationReducer","markerFormReducer","activeMarkerReducer","markerReducer","createStore","applyMiddleware","thunk","ReactDOM","es","src_App","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.53ab6cb1.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = '/api/markers'\nlet token = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst remove = async id => {\n  const config = {\n    headers: { Authorization: token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, update, remove, setToken }\n","const reducer = (store = null, action) => {\n  switch (action.type) {\n    case 'ADD_USER':\n      return action.user\n    case 'REMOVE_USER':\n      return null\n    default:\n      return store\n  }\n}\n\nexport const login = user => dispatch => {\n  dispatch({\n    type: 'ADD_USER',\n    user\n  })\n}\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: 'REMOVE_USER'\n  })\n}\n\nexport default reducer\n","const reducer = (\n  store = { username: '', password: '', password2: '' },\n  action\n) => {\n  switch (action.type) {\n    case 'REGISTER_USERNAME':\n      return { ...store, username: action.username }\n    case 'REGISTER_PASSWORD':\n      return { ...store, password: action.password }\n    case 'REGISTER_PASSWORD2':\n      return { ...store, password2: action.password2 }\n    case 'REGISTER_CLEAR':\n      return { username: '', password: '', password2: '' }\n    default:\n      return store\n  }\n}\n\nexport const updateUsername = username => dispatch => {\n  dispatch({\n    type: 'REGISTER_USERNAME',\n    username\n  })\n}\n\nexport const updatePassword = password => dispatch => {\n  dispatch({\n    type: 'REGISTER_PASSWORD',\n    password\n  })\n}\n\nexport const updatePassword2 = password2 => dispatch => {\n  dispatch({\n    type: 'REGISTER_PASSWORD2',\n    password2\n  })\n}\n\nexport const clearForm = () => dispatch => {\n  dispatch({\n    type: 'REGISTER_CLEAR'\n  })\n}\n\nexport default reducer\n","import React from 'react'\nimport { Message } from 'semantic-ui-react'\n\nconst Notification = ({ text, color }) =>\n  text ? (\n    <div>\n      <Message\n        compact\n        color={color}\n        header={text}\n        icon={color === 'green' ? 'thumbs up' : 'warning sign'}\n        size='large'\n      />\n    </div>\n  ) : null\n\nexport default Notification\n","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n  const response = await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","const reducer = (store = {}, action) => {\n  switch (action.type) {\n    case 'ADD_MESSAGE':\n      return action.message\n    case 'REMOVE_MESSAGE':\n      return {}\n    default:\n      return store\n  }\n}\n\nexport const showMessage = message => {\n  return dispatch => {\n    dispatch({\n      type: 'ADD_MESSAGE',\n      message\n    })\n    setTimeout(() => {\n      dispatch({\n        type: 'REMOVE_MESSAGE'\n      })\n    }, 2000)\n  }\n}\n\nexport default reducer\n","const reducer = (store = { username: '', password: '' }, action) => {\n  switch (action.type) {\n    case 'LOGIN_USERNAME':\n      return { ...store, username: action.username }\n    case 'LOGIN_PASSWORD':\n      return { ...store, password: action.password }\n    case 'LOGIN_CLEAR':\n      return { username: '', password: '' }\n    default:\n      return store\n  }\n}\n\nexport const updateUsername = username => dispatch => {\n  dispatch({\n    type: 'LOGIN_USERNAME',\n    username\n  })\n}\n\nexport const updatePassword = password => dispatch => {\n  dispatch({\n    type: 'LOGIN_PASSWORD',\n    password\n  })\n}\n\nexport const clearForm = () => dispatch => {\n  dispatch({\n    type: 'LOGIN_CLEAR'\n  })\n}\n\nexport default reducer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Button, Form, Segment } from 'semantic-ui-react'\nimport loginService from './services/login'\nimport travelService from './services/markers'\nimport { login } from './reducers/userReducer'\nimport { showMessage } from './reducers/messageReducer'\nimport {\n  updateUsername,\n  updatePassword,\n  clearForm\n} from './reducers/loginFormReducer'\n\nclass LoginForm extends Component {\n  login = async event => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login(this.props.user)\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      travelService.setToken(user.token)\n      this.props.clearForm()\n      this.props.login(user)\n    } catch (exception) {\n      console.log(exception)\n      this.showMessage('Invalid username or password!', 'red')\n    }\n  }\n\n  showMessage = (text, color) =>\n    this.props.showMessage({\n      text,\n      color\n    })\n\n  updateUsername = event => this.props.updateUsername(event.target.value)\n\n  updatePassword = event => this.props.updatePassword(event.target.value)\n\n  render() {\n    return (\n      <Form onSubmit={this.login} size='large'>\n        <Segment>\n          <Form.Input\n            icon='user'\n            iconPosition='left'\n            placeholder='Username'\n            value={this.props.username}\n            onChange={this.updateUsername}\n          />\n          <Form.Input\n            icon='lock'\n            iconPosition='left'\n            placeholder='Password'\n            type='password'\n            value={this.props.password}\n            onChange={this.updatePassword}\n          />\n          <Button color='blue' fluid size='large' type='submit'>\n            Login\n          </Button>\n        </Segment>\n      </Form>\n    )\n  }\n}\nconst mapStateToProps = state => {\n  return {\n    user: state.loginForm,\n    username: state.loginForm.username,\n    password: state.loginForm.password\n  }\n}\n\nconst mapDispatchToProps = {\n  login,\n  showMessage,\n  updateUsername,\n  updatePassword,\n  clearForm\n}\n\nconst connectedLoginForm = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LoginForm)\n\nexport default connectedLoginForm\n","import axios from 'axios'\nconst baseUrl = '/api/users'\n\nconst create = async newObject => {\n  const response = await axios.post(baseUrl, newObject)\n  return response.data\n}\n\nexport default { create }\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { Button, Form, Segment } from 'semantic-ui-react'\nimport userService from './services/users.js'\nimport { showMessage } from './reducers/messageReducer'\nimport {\n  updateUsername,\n  updatePassword,\n  updatePassword2,\n  clearForm\n} from './reducers/registerFormReducer'\n\nclass RegistrationForm extends React.Component {\n  register = async event => {\n    event.preventDefault()\n    const username = this.props.username\n    const password = this.props.password\n    const password2 = this.props.password2\n    if (username.length < 3) {\n      this.showMessage('Username must be at least 3 characters long!', 'red')\n    } else if (password !== password2) {\n      this.showMessage(\"Passwords don't match!\", 'red')\n    } else if (password.length < 3) {\n      this.showMessage('Password must be at least 3 characters long!', 'red')\n    } else {\n      this.createAccount(username, password)\n    }\n  }\n\n  createAccount = async (username, password) => {\n    try {\n      await userService.create({\n        username,\n        password\n      })\n      this.showMessage(`Account ${username} created!`, 'green')\n      this.props.clearForm()\n      this.props.history.push('/login')\n    } catch (exception) {\n      console.log(exception)\n      this.showMessage('Username is already taken!', 'red')\n    }\n  }\n\n  showMessage = (text, color) =>\n    this.props.showMessage({\n      text,\n      color\n    })\n\n  updateUsername = e => this.props.updateUsername(e.target.value)\n\n  updatePassword = e => this.props.updatePassword(e.target.value)\n\n  updatePassword2 = e => this.props.updatePassword2(e.target.value)\n\n  render() {\n    return (\n      <Form onSubmit={this.register} size='large'>\n        <Segment>\n          <Form.Input\n            icon='user'\n            iconPosition='left'\n            placeholder='Username'\n            value={this.props.username}\n            onChange={this.updateUsername}\n          />\n          <Form.Input\n            icon='lock'\n            iconPosition='left'\n            placeholder='Password'\n            type='password'\n            value={this.props.password}\n            onChange={this.updatePassword}\n          />\n          <Form.Input\n            icon='lock'\n            iconPosition='left'\n            placeholder='Repeat password'\n            type='password'\n            value={this.props.password2}\n            onChange={this.updatePassword2}\n          />\n          <Button color='blue' fluid size='large' type='submit'>\n            Submit\n          </Button>\n        </Segment>\n      </Form>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    username: state.registerForm.username,\n    password: state.registerForm.password,\n    password2: state.registerForm.password2\n  }\n}\n\nconst mapDispatchToProps = {\n  showMessage,\n  updateUsername,\n  updatePassword,\n  updatePassword2,\n  clearForm\n}\n\nconst connectedRegistrationForm = withRouter(\n  connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(RegistrationForm)\n)\n\nexport default connectedRegistrationForm\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Grid, Icon, Header, Divider, Message } from 'semantic-ui-react'\nimport Notification from './Notification'\nimport LoginForm from './LoginForm'\nimport RegistrationForm from './RegistrationForm'\n\nconst Forms = ({ login, text, color }) => (\n  <div style={{ overflow: 'hidden' }}>\n    <Divider hidden />\n    <Grid centered padded>\n      <Grid.Row>\n        <Notification text={text} color={color} />\n      </Grid.Row>\n    </Grid>\n    <Divider hidden />\n    {text ? null : (\n      <div>\n        <Divider hidden />\n        <Divider hidden />\n        <Divider hidden />\n        <Divider hidden />\n        <Divider hidden />\n      </div>\n    )}\n    <Grid textAlign='center'>\n      <Grid.Column style={{ maxWidth: 450 }}>\n        <Header as='h2' color='blue'>\n          <Icon name={login ? 'plane' : 'user circle'} />\n          {login ? 'Log in to account' : 'Create new account'}\n        </Header>\n        {login ? <LoginForm /> : <RegistrationForm />}\n        <Message>\n          <Link to={login ? '/register' : '/login'}>\n            {login ? 'Create new account' : 'Log in to account'}\n          </Link>\n        </Message>\n      </Grid.Column>\n    </Grid>\n    <Divider hidden />\n  </div>\n)\n\nexport default Forms\n","const reducer = (store = false, action) => {\n  switch (action.type) {\n    case 'OPEN_WINDOW':\n      return true\n    case 'CLOSE_WINDOW':\n      return false\n    default:\n      return store\n  }\n}\n\nexport const openWindow = () => dispatch => {\n  dispatch({\n    type: 'OPEN_WINDOW'\n  })\n}\n\nexport const closeWindow = () => dispatch => {\n  dispatch({\n    type: 'CLOSE_WINDOW'\n  })\n}\n\nexport default reducer\n","const reducer = (store = '', action) => {\n  switch (action.type) {\n    case 'CHANGE_TAB':\n      return action.tab\n    default:\n      return store\n  }\n}\n\nexport const changeTab = tab => dispatch => {\n  dispatch({\n    type: 'CHANGE_TAB',\n    tab\n  })\n}\n\nexport default reducer\n","const reducer = (store = false, action) => {\n  switch (action.type) {\n    case 'OPEN_CONFIRMATION':\n      return true\n    case 'CLOSE_CONFIRMATION':\n      return false\n    default:\n      return store\n  }\n}\n\nexport const openConfirmation = () => dispatch => {\n  dispatch({\n    type: 'OPEN_CONFIRMATION'\n  })\n}\n\nexport const closeConfirmation = () => dispatch => {\n  dispatch({\n    type: 'CLOSE_CONFIRMATION'\n  })\n}\n\nexport default reducer\n","const reducer = (store = { title: '', text: '' }, action) => {\n  switch (action.type) {\n    case 'MARKER_TITLE':\n      return { ...store, title: action.title }\n    case 'MARKER_TEXT':\n      return { ...store, text: action.text }\n    case 'MARKER_FORM':\n      return action.form\n    case 'MARKER_CLEAR':\n      return { title: '', text: '' }\n    default:\n      return store\n  }\n}\n\nexport const updateTitle = title => dispatch => {\n  dispatch({\n    type: 'MARKER_TITLE',\n    title\n  })\n}\n\nexport const updateText = text => dispatch => {\n  dispatch({\n    type: 'MARKER_TEXT',\n    text\n  })\n}\n\nexport const updateForm = form => dispatch => {\n  dispatch({\n    type: 'MARKER_FORM',\n    form\n  })\n}\n\nexport const clearForm = () => dispatch => {\n  dispatch({\n    type: 'MARKER_CLEAR'\n  })\n}\n\nexport default reducer\n","const reducer = (store = { title: '', text: '' }, action) => {\n  switch (action.type) {\n    case 'ADD_ACTIVE_MARKER':\n      return action.marker\n    case 'REMOVE_ACTIVE_MARKER':\n      return { title: '', text: '' }\n    default:\n      return store\n  }\n}\n\nexport const addActiveMarker = marker => dispatch => {\n  dispatch({\n    type: 'ADD_ACTIVE_MARKER',\n    marker\n  })\n}\n\nexport const removeActiveMarker = () => dispatch => {\n  dispatch({\n    type: 'REMOVE_ACTIVE_MARKER'\n  })\n}\n\nexport default reducer\n","const reducer = (store = [], action) => {\n  switch (action.type) {\n    case 'INIT_MARKERS':\n      return action.markers\n    case 'ADD_MARKER':\n      return [...store, action.marker]\n    case 'REPLACE_MARKER':\n      const editedMarkers = store.filter(m => m.id !== action.id)\n      return editedMarkers.concat(action.marker)\n    case 'REMOVE_MARKER':\n      return store.filter(m => m.id !== action.id)\n    default:\n      return store\n  }\n}\n\nexport const initMarkers = markers => dispatch => {\n  dispatch({\n    type: 'INIT_MARKERS',\n    markers\n  })\n}\n\nexport const addMarker = marker => dispatch => {\n  dispatch({\n    type: 'ADD_MARKER',\n    marker\n  })\n}\n\nexport const replaceMarker = (id, marker) => dispatch => {\n  dispatch({\n    type: 'REPLACE_MARKER',\n    id,\n    marker\n  })\n}\n\nexport const removeMarker = id => dispatch => {\n  dispatch({\n    type: 'REMOVE_MARKER',\n    id\n  })\n}\n\nexport default reducer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport {\n  Button,\n  Confirm,\n  Divider,\n  Form,\n  Grid,\n  Header,\n  Icon,\n  Menu,\n  Modal\n} from 'semantic-ui-react'\nimport markerService from './services/markers'\nimport { closeWindow } from './reducers/infoWindowReducer'\nimport { changeTab } from './reducers/menuTabReducer'\nimport {\n  openConfirmation,\n  closeConfirmation\n} from './reducers/confirmationReducer'\nimport {\n  updateTitle,\n  updateText,\n  updateForm,\n  clearForm\n} from './reducers/markerFormReducer'\nimport {\n  addActiveMarker,\n  removeActiveMarker\n} from './reducers/activeMarkerReducer'\nimport { replaceMarker, removeMarker } from './reducers/markerReducer'\n\nclass InfoWindow extends Component {\n  updateMarker = async () => {\n    const marker = {\n      ...this.props.activeMarker,\n      title: this.props.formTitle,\n      text: this.props.formText\n    }\n    const update = await markerService.update(marker.id, marker)\n    this.props.replaceMarker(marker.id, update)\n    this.props.updateForm({\n      title: update.title,\n      text: update.text\n    })\n    this.props.changeTab('info')\n    this.props.addActiveMarker(update)\n  }\n\n  removeMarker = async () => {\n    const id = this.props.activeMarker.id\n    try {\n      await markerService.remove(id)\n      this.props.removeMarker(id)\n      this.props.clearForm()\n    } catch (exception) {\n      console.log(exception)\n    }\n    this.props.closeConfirmation()\n    this.props.removeActiveMarker()\n    this.props.closeWindow()\n  }\n\n  onClose = () => {\n    if (this.emptyForm()) {\n      this.openConfirmation()\n    } else {\n      this.props.clearForm()\n      this.props.removeActiveMarker()\n      this.props.closeWindow()\n    }\n  }\n\n  emptyForm = () =>\n    this.props.activeTitle.length === 0 && this.props.activeText.length === 0\n\n  openConfirmation = () => this.props.openConfirmation()\n\n  closeConfirmation = () => this.props.closeConfirmation()\n\n  onTitleChange = event => this.props.updateTitle(event.target.value)\n\n  onTextChange = event => this.props.updateText(event.target.value)\n\n  render() {\n    return (\n      <div>\n        <Confirm\n          header='WARNING!'\n          content={this.emptyForm() ? 'Remove empty marker?' : 'Are you sure?'}\n          cancelButton='Nevermind.'\n          confirmButton=\"Let's do it!\"\n          open={this.props.confirmation}\n          onCancel={this.closeConfirmation}\n          onConfirm={this.removeMarker}\n          style={{ marginTop: '-125px' }}\n        />\n        <Modal\n          open={this.props.infoWindow}\n          onClose={this.onClose}\n          style={{ marginTop: '-250px' }}\n          closeIcon>\n          <div>\n            <Menu icon='labeled' widths={3} tabular size='huge' color='blue'>\n              <Menu.Item\n                active={this.props.menuTab === 'info'}\n                onClick={() => this.props.changeTab('info')}>\n                <Icon name='book' />\n                Info\n              </Menu.Item>\n              <Menu.Item\n                active={this.props.menuTab === 'edit'}\n                onClick={() => this.props.changeTab('edit')}>\n                <Icon name='edit' />\n                Edit\n              </Menu.Item>\n              <Menu.Item\n                active={this.props.menuTab === 'remove'}\n                onClick={() => this.props.changeTab('remove')}>\n                <Icon name='trash' />\n                Remove\n              </Menu.Item>\n            </Menu>\n            <Divider hidden />\n            <Divider hidden />\n            <Divider hidden />\n            {this.props.menuTab === 'info' ? (\n              <div>\n                <div>\n                  <Grid centered verticalAlign='middle'>\n                    <Grid.Row>\n                      <Header as='h1' textAlign='center'>\n                        <Divider hidden />\n                        {this.props.formTitle.length > 0\n                          ? this.props.activeTitle\n                          : null}\n                      </Header>\n                    </Grid.Row>\n                    <Grid.Row>\n                      <Header as='h3'>{this.props.activeText}</Header>\n                    </Grid.Row>\n                  </Grid>\n                </div>\n              </div>\n            ) : this.props.menuTab === 'edit' ? (\n              <div>\n                <Grid centered verticalAlign='middle'>\n                  <Grid.Column style={{ maxWidth: 450 }}>\n                    <Form onSubmit={this.updateMarker} size='large'>\n                      <Form.Input\n                        name='newTitle'\n                        label='Edit title'\n                        value={this.props.formTitle}\n                        onChange={this.onTitleChange}\n                      />\n                      <Form.TextArea\n                        name='newText'\n                        label='Additional information'\n                        value={this.props.formText}\n                        rows={4}\n                        onChange={this.onTextChange}\n                      />\n                      <Button color='blue' fluid size='large' type='submit'>\n                        Update\n                      </Button>\n                    </Form>\n                  </Grid.Column>\n                </Grid>\n              </div>\n            ) : (\n              <div>\n                <Divider hidden />\n                <Grid padded centered verticalAlign='middle'>\n                  <Button\n                    size='large'\n                    centered='top'\n                    color='blue'\n                    type='submit'\n                    onClick={this.openConfirmation}>\n                    Remove marker\n                  </Button>\n                </Grid>\n                <Divider hidden />\n              </div>\n            )}\n            <Divider hidden />\n            <Divider hidden />\n            <Divider hidden />\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    infoWindow: state.infoWindow,\n    menuTab: state.menuTab,\n    confirmation: state.confirmation,\n    formTitle: state.markerForm.title,\n    formText: state.markerForm.text,\n    activeMarker: state.activeMarker,\n    activeTitle: state.activeMarker.title,\n    activeText: state.activeMarker.text\n  }\n}\n\nconst mapDispatchToProps = {\n  closeWindow,\n  changeTab,\n  openConfirmation,\n  closeConfirmation,\n  updateTitle,\n  updateText,\n  updateForm,\n  clearForm,\n  addActiveMarker,\n  removeActiveMarker,\n  replaceMarker,\n  removeMarker\n}\n\nconst connectedInfoWindow = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(InfoWindow)\n\nexport default connectedInfoWindow\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Map, GoogleApiWrapper, Marker } from 'google-maps-react'\nimport markerService from './services/markers'\nimport InfoWindow from './InfoWindow'\nimport { openWindow } from './reducers/infoWindowReducer'\nimport { changeTab } from './reducers/menuTabReducer'\nimport { updateForm } from './reducers/markerFormReducer'\nimport { addActiveMarker } from './reducers/activeMarkerReducer'\nimport { initMarkers, addMarker } from './reducers/markerReducer'\n\nexport class GoogleMaps extends Component {\n  componentDidMount = async () => {\n    const data = await markerService.getAll()\n    const markers = data.map(marker => {\n      return {\n        id: marker.id,\n        user: marker.user._id,\n        title: marker.title,\n        text: marker.text,\n        position: { lat: marker.position.lat, lng: marker.position.lng }\n      }\n    })\n    this.props.initMarkers(markers)\n  }\n\n  onMapClick = async (t, map, coord) => {\n    const { latLng } = coord\n    const lat = latLng.lat()\n    const lng = latLng.lng()\n    const markerData = {\n      user: this.props.user.id,\n      title: '',\n      text: '',\n      position: {\n        lat,\n        lng\n      }\n    }\n    try {\n      const marker = await markerService.create(markerData)\n      this.props.updateForm({\n        title: marker.title,\n        text: marker.text\n      })\n      this.props.changeTab('edit')\n      this.props.addMarker(marker)\n      this.props.addActiveMarker(marker)\n      this.props.openWindow()\n    } catch (exception) {\n      console.log(exception)\n    }\n  }\n\n  onMarkerClick = async props => {\n    const lat = props.position.lat\n    const lng = props.position.lng\n    const marker = this.props.markers.find(\n      m => m.position.lat === lat && m.position.lng === lng\n    )\n    this.props.updateForm({\n      title: marker.title,\n      text: marker.text\n    })\n    this.props.changeTab('info')\n    this.props.addActiveMarker(marker)\n    this.props.openWindow()\n  }\n\n  renderMarkers = () => {\n    const markers = this.props.markers\n    const filtered = markers.filter(m => m.user === this.props.user.id)\n    return filtered.map(m => (\n      <Marker\n        key={m.id}\n        title={m.title}\n        name={m.text}\n        position={m.position}\n        onClick={this.onMarkerClick}\n      />\n    ))\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          display: 'flex',\n          justifyContent: 'center'\n        }}>\n        <InfoWindow />\n        <Map\n          google={this.props.google}\n          zoom={2}\n          initialCenter={{ lat: 0, lng: 0 }}\n          onClick={this.onMapClick}>\n          {this.renderMarkers()}\n        </Map>\n      </div>\n    )\n  }\n}\n\nconst wrapper = GoogleApiWrapper(({ apiKey, language }) => ({\n  apiKey: apiKey,\n  language: language\n}))(GoogleMaps)\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    markers: state.markers\n  }\n}\n\nconst mapDispatchToProps = {\n  openWindow,\n  changeTab,\n  updateForm,\n  addActiveMarker,\n  initMarkers,\n  addMarker\n}\n\nconst connectedWrapper = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(wrapper)\n\nexport default connectedWrapper\n","import React from 'react'\nimport { Menu, Icon, Button } from 'semantic-ui-react'\n\nconst Logout = ({ logout }) => {\n  return (\n    <div>\n      <Menu widths={3} borderless size='huge'>\n        <Menu.Item>\n          <Button color='blue' onClick={logout} size='large'>\n            <Icon name='log out' />\n            Log out\n          </Button>\n        </Menu.Item>\n      </Menu>\n    </div>\n  )\n}\n\nexport default Logout\n","import React from 'react'\nimport GoogleMaps from './GoogleMaps'\nimport Logout from './Logout'\n\nconst Map = ({ logout }) => (\n  <div>\n    <GoogleMaps apiKey={process.env.REACT_APP_MAPS_API_KEY} language={'en'} />\n    <Logout logout={logout} />\n  </div>\n)\n\nexport default Map\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Redirect, Route, BrowserRouter as Router } from 'react-router-dom'\nimport { Container } from 'semantic-ui-react'\nimport travelService from './services/markers'\nimport { login, logout } from './reducers/userReducer'\nimport { clearForm } from './reducers/registerFormReducer'\nimport Forms from './Forms'\nimport Map from './Map'\n\nexport class App extends Component {\n  componentDidMount = async () => {\n    const loggedInUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON)\n      this.props.login(user)\n      travelService.setToken(user.token)\n    }\n  }\n\n  logout = () => {\n    travelService.setToken(null)\n    window.localStorage.removeItem('loggedInUser')\n    this.props.clearForm()\n    this.props.logout()\n  }\n\n  render() {\n    const user = this.props.user\n    const text = this.props.text\n    const color = this.props.color\n    return (\n      <Router>\n        <Container>\n          <Route exact path='/' render={() => <Redirect to='/login' />} />\n          <Route\n            path='/login'\n            render={\n              user\n                ? () => <Redirect to='/map' />\n                : () => <Forms login={true} text={text} color={color} />\n            }\n          />\n          <Route\n            path='/register'\n            render={\n              user\n                ? () => <Redirect to='/map' />\n                : () => <Forms login={false} text={text} color={color} />\n            }\n          />\n          <Route\n            path='/map'\n            render={\n              user\n                ? () => <Map logout={this.logout} />\n                : () => <Redirect to='/login' />\n            }\n          />\n        </Container>\n      </Router>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user,\n    text: state.message.text,\n    color: state.message.color\n  }\n}\n\nconst mapDispatchToProps = {\n  login,\n  logout,\n  clearForm\n}\n\nconst connectedApp = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App)\n\nexport default connectedApp\n","import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport userReducer from './reducers/userReducer'\nimport messageReducer from './reducers/messageReducer'\nimport loginFormReducer from './reducers/loginFormReducer'\nimport registerFormReducer from './reducers/registerFormReducer'\nimport infoWindowReducer from './reducers/infoWindowReducer'\nimport menuTabReducer from './reducers/menuTabReducer'\nimport confirmationReducer from './reducers/confirmationReducer'\nimport markerFormReducer from './reducers/markerFormReducer'\nimport activeMarkerReducer from './reducers/activeMarkerReducer'\nimport markerReducer from './reducers/markerReducer'\n\nconst reducer = combineReducers({\n  user: userReducer,\n  message: messageReducer,\n  loginForm: loginFormReducer,\n  registerForm: registerFormReducer,\n  infoWindow: infoWindowReducer,\n  menuTab: menuTabReducer,\n  confirmation: confirmationReducer,\n  markerForm: markerFormReducer,\n  activeMarker: activeMarkerReducer,\n  markers: markerReducer\n})\n\nconst store = createStore(reducer, applyMiddleware(thunk))\n\nexport default store\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport App from './App'\nimport store from './store'\n\nconst render = () => {\n  ReactDOM.render(\n    <Provider store={store}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  )\n}\n\nrender()\nstore.subscribe(render)\n"],"sourceRoot":""}