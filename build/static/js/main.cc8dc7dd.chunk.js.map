{"version":3,"sources":["services/travels.js","AddModal.js","GoogleApiWrapper.js","components/Images.js","LoginForm.js","RegistrationForm.js","services/login.js","services/users.js","Notification.js","App.js","index.js"],"names":["baseUrl","token","travels","getAll","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","response","wrap","_context","prev","next","axios","get","sent","abrupt","data","stop","this","apply","arguments","create","_ref2","_callee2","newObject","config","_context2","headers","Authorization","post","_x","update","_ref3","_callee3","id","_context3","put","concat","_x2","_x3","remove","_ref4","_callee4","_context4","delete","_x4","setToken","newToken","AddMenu","title","react_default","createElement","Menu","size","Item","Header","position","Button","icon","onClick","console","log","Icon","name","centered","AddModal","open","close","inlineStyle","marker","Modal","padded","onClose","style","modal","closeIcon","AddModal_AddMenu","Content","text","marginTop","display","MapContainer","_Component","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","componentDidMount","markers","travelService","map","lat","lng","setState","updateMarker","removeMarker","toRemove","state","activeMarker","window","confirm","filter","m","t0","modalOpen","onMarkerClick","e","clickedMarker","find","selectedPlace","showingInfoWindow","createMarker","_callee5","newMarker","travel","_context5","onMapClicked","t","coord","latLng","renderMarkers","dist","key","handleOpen","handleClose","user","inherits","createClass","value","height","width","flexFlow","justifyContent","padding","src_AddModal","google","zoom","initialCenter","Component","GoogleApiWrapper","_ref6","apiKey","language","Container","LoginForm","onSubmit","handleChange","username","password","className","Grid","textAlign","verticalAlign","Column","maxWidth","as","color","Form","Segment","Input","fluid","iconPosition","placeholder","onChange","type","Message","Link","to","RegistrationForm","password2","services_login","login","credentials","users","Notification","message","header","Divider","hidden","content","warning","App","_getPrototypeOf2","_len","length","args","Array","_key","newUsername","newPassword","newPassword2","handleFieldChange","event","target","defineProperty","loggedInUserJSON","localStorage","getItem","JSON","parse","logout","removeItem","notify","setTimeout","preventDefault","loginService","setItem","stringify","register","createAccount","userService","history","push","_this2","src_Notification","Route","exact","path","render","Redirect","src_LoginForm","src_RegistrationForm","bind","App_Map","settings","Map","_ref5","marginLeft","App_MenuExampleButtons","MenuExampleButtons","stackable","widths","withRouter","ReactDOM","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.cc8dc7dd.chunk.js","sourcesContent":["import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/travels'\nlet token = null\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst setToken = (newToken) => {\n  token = `bearer ${newToken}`\n}\n\nconst create = async (newObject) => {\n  const config = {\n    headers: { 'Authorization': token }\n  }\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst remove = async (id) => {\n  const config = {\n    headers: { 'Authorization': token }\n  }\n  const response = await axios.delete(`${baseUrl}/${id}`, config)\n  return response.data\n}\n\nexport default { getAll, create, update, remove, setToken }\n","import React from 'react'\nimport { Modal, Header, Image, Menu, Button, Icon } from 'semantic-ui-react'\n\nconst AddModal = ({ open, close, inlineStyle, marker, remove }) => {\n  console.log(marker)\n  return (\n    <Modal\n      padded\n      open={open}\n      onClose={close}\n      style={inlineStyle.modal}\n      closeIcon>\n      <Modal.Header>\n        <AddMenu title={marker.title} remove={remove} />\n      </Modal.Header>\n      <Modal.Content>{marker.text}</Modal.Content>\n    </Modal>\n  )\n}\n\nconst AddMenu = ({ title, remove }) => {\n  return (\n    <Menu size='huge'>\n      <Menu.Item>\n        <Header>{title}</Header>\n      </Menu.Item>\n      <Menu.Item position='right'>\n        <Button icon onClick={console.log('pencil')}>\n          <Icon name='pencil' />\n        </Button>\n      </Menu.Item>\n      <Menu.Item centered>\n        <Button icon onClick={remove}>\n          <Icon name='trash' />\n        </Button>\n      </Menu.Item>\n    </Menu>\n  )\n}\n\nexport default AddModal\n","import React, { Component } from 'react'\nimport { Map, GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react'\nimport {\n  Item,\n  Grid,\n  Link,\n  Icon,\n  Image,\n  Header,\n  Modal,\n  Button,\n  Container\n} from 'semantic-ui-react'\nimport travelService from './services/travels'\nimport AddModal from './AddModal'\n\nconst mapStyles = {\n  width: '75%',\n  height: '75%'\n}\n\nconst inlineStyle = {\n  modal: {\n    marginTop: '-200px',\n    display: 'fixed !important'\n  }\n}\n\nexport class MapContainer extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      user: this.props.user,\n      showingInfoWindow: false, //Hides or the shows the infoWindow\n      activeMarker: {}, //Shows the active marker upon click\n      selectedPlace: {}, //Shows the infoWindow to the selected place upon a marker\n      modalOpen: false,\n      newMarker: {},\n      markers: []\n    }\n  }\n\n  componentDidMount = async () => {\n    const data = await travelService.getAll()\n    console.log('data', data)\n    const markers = data.map(marker => {\n      return {\n        id: marker.id,\n        title: marker.title,\n        text: marker.text,\n        position: { lat: marker.position.lat, lng: marker.position.lng }\n      }\n    })\n    this.setState({ markers })\n  }\n\n  updateMarker = async () => {}\n\n  removeMarker = async () => {\n    const toRemove = this.state.activeMarker\n    if (window.confirm(`Remove ${toRemove.title}?`)) {\n      try {\n        const travel = await travelService.remove(toRemove.id)\n        const markers = this.state.markers.filter(m => m.id !== toRemove.id)\n        await this.setState({ markers })\n      } catch (exception) {\n        console.log(exception)\n      }\n      await this.setState({\n        activeMarker: {},\n        modalOpen: false\n      })\n    }\n  }\n\n  onMarkerClick = async (props, marker, e) => {\n    const lat = props.position.lat\n    const lng = props.position.lng\n    const clickedMarker = this.state.markers.find(\n      marker => marker.position.lat === lat && marker.position.lng === lng\n    )\n    console.log('clicked', clickedMarker)\n    await this.setState({\n      selectedPlace: props,\n      activeMarker: clickedMarker,\n      modalOpen: true\n    })\n  }\n\n  onClose = props => {\n    if (this.state.showingInfoWindow) {\n      this.setState({\n        showingInfoWindow: false,\n        activeMarker: {},\n        modalOpen: false\n      })\n    }\n  }\n\n  createMarker = async () => {\n    const newMarker = this.state.newMarker\n    console.log('täs ny', newMarker)\n    try {\n      const travel = await travelService.create(newMarker)\n      await this.setState({\n        markers: this.state.markers.concat(travel),\n        activeMarker: travel,\n        modalOpen: true\n      })\n    } catch (exception) {\n      console.log(exception)\n    }\n  }\n\n  onMapClicked = (t, map, coord) => {\n    const { latLng } = coord\n    const lat = latLng.lat()\n    const lng = latLng.lng()\n    const newMarker = {\n      title: 'moi',\n      text: 'add text...',\n      position: {\n        lat,\n        lng\n      }\n    }\n    this.setState({ newMarker })\n    console.log('täs', newMarker)\n    this.createMarker()\n  }\n\n  renderMarkers = () => {\n    const markers = this.state.markers\n    console.log('markers', markers)\n    return markers.map(marker => (\n      <Marker\n        key={marker.id}\n        title={marker.title}\n        name={marker.text}\n        position={marker.position}\n        onClick={this.onMarkerClick}\n      />\n    ))\n  }\n\n  handleOpen = () => this.setState({ modalOpen: true })\n\n  handleClose = () => this.setState({ modalOpen: false })\n\n  render() {\n    console.log(this.state.markers)\n    console.log(this.state.activeMarker)\n    return (\n      <div\n        style={{\n          height: 350,\n          width: '100%',\n          display: 'flex',\n          flexFlow: 'row nowrap',\n          justifyContent: 'center',\n          padding: 0\n        }}>\n        <AddModal\n          open={this.state.modalOpen}\n          close={this.handleClose}\n          inlineStyle={inlineStyle}\n          marker={this.state.activeMarker}\n          remove={this.removeMarker}\n        />\n        <Map\n          google={this.props.google}\n          zoom={2}\n          initialCenter={{ lat: 0, lng: 0 }}\n          onClick={this.onMapClicked}>\n          {this.renderMarkers()}\n        </Map>\n      </div>\n    )\n  }\n}\n\nexport default GoogleApiWrapper(({ apiKey, language }) => ({\n  apiKey: apiKey,\n  language: language\n}))(MapContainer)\n","import React from 'react'\nimport { Container, Divider, Image } from 'semantic-ui-react'\n\nconst Images = [\n  <Container>\n  </Container>\n]\n\nexport default Images\n","import React from 'react'\nimport {\n  Button,\n  Form,\n  Grid,\n  Icon,\n  Header,\n  Image,\n  Message,\n  Segment\n} from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst LoginForm = ({ onSubmit, handleChange, username, password }) => {\n  return (\n    <div className='login-form'>\n      <style>{`\n      body > div,\n      body > div > div,\n      body > div > div > div.login-form {\n        height: 100%;\n      }\n    `}</style>\n      <Grid\n        textAlign='center'\n        style={{ height: '100%' }}\n        verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='blue' textAlign='center'>\n            <Icon name='plane' /> Log in to account\n          </Header>\n          <Form\n            onSubmit={onSubmit}\n            size='large' /*loading success error field error*/\n          >\n            <Segment>\n              <Form.Input\n                fluid\n                icon='user'\n                name='username'\n                iconPosition='left'\n                placeholder='Username'\n                value={username}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                name='password'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n                value={password}\n                onChange={handleChange}\n              />\n              <Button color='blue' fluid size='large' type='submit'>\n                Login\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            <Link to='/create'>Create new account</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n}\nexport default LoginForm\n\n/*import React from 'react'\nimport Blog from './components/Blog'\nimport Togglable from './components/Togglable'\nimport Notification from './components/Notification'\nimport LoginForm from './components/LoginForm'\nimport BlogForm from './components/BlogForm'\nimport loginService from './services/login'\nimport blogService from './services/blogs'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      username: '',\n      password: '',\n      blogs: [],\n      user: null,\n      loginVisible: false,\n      message: '',\n      color: ''\n    }\n  }\n\n    const data = await blogService.getAll()\n    const blogs = data\n      .sort(compare)\n      .map(blog =>\n        <Blog\n          key={blog.id}\n          id={blog.id}\n          user={blog.user}\n          likes={blog.likes}\n          author={blog.author}\n          title={blog.title}\n          url={blog.url}\n        />\n      )\n\n    this.setState({ blogs })\n\n    const loggedInUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON)\n      this.setState({ user })\n      blogService.setToken(user.token)\n    }\n  }\n\n  handleFieldChange = (event) => this.setState({ [event.target.name]: event.target.value })\n\n  login = async (event) => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username: this.state.username,\n        password: this.state.password\n      })\n\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      blogService.setToken(user.token)\n      this.setState({ username: '', password: '', user: user })\n      this.notify(`${this.state.user.username} logged in succesfully!`, 'green')\n    } catch (exception) {\n      console.log(exception)\n      this.notify('invalid username or password!', 'red')\n    }\n  }\n\n  logout = () => () => {\n    blogService.setToken(null)\n    window.localStorage.removeItem('loggedInUser')\n    this.notify(`${this.state.user.username} logged out succesfully!`, 'green')\n    this.setState({ user: null })\n  }\n\n  addBlog = () => () => {\n    const newBlog = {\n      title: this.state.newTitle,\n      author: this.state.newAuthor,\n      url: this.state.newUrl\n    }\n    blogService.create(newBlog)\n  }\n\n  notify = (message, color) => {\n    this.setState({ message, color })\n    setTimeout(() => {\n      this.setState({\n        message: null,\n        color: null\n      })\n    }, 2000)\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>BLOG LIST</h1>\n        <Notification message={this.state.message} color={this.state.color} />\n        {this.state.user === null ?\n          <div>\n            <Togglable buttonLabel=\"login\">\n              <LoginForm\n                onSubmit={this.login}\n                handleChange={this.handleFieldChange}\n                username={this.state.username}\n                password={this.state.password} />\n            </Togglable>\n          </div> :\n          <div>\n            <h2>{this.state.user.username} logged in <button onClick={this.logout()}>logout</button></h2>\n            <Togglable buttonLabel=\"new blog\">\n              <BlogForm\n                onSubmit={this.addBlog()}\n                handleChange={this.handleFieldChange}\n                title={this.state.newTitle}\n                author={this.state.newAuthor}\n                url={this.state.newUrl} />\n            </Togglable>\n            <h2>Blogs</h2>\n            {this.state.blogs}\n          </div>}\n      </div>\n    )\n  }\n}\n\nexport default App\n*/\n","import React from 'react'\nimport {\n  Button,\n  Form,\n  Grid,\n  Icon,\n  Header,\n  Message,\n  Segment\n} from 'semantic-ui-react'\nimport { Link } from 'react-router-dom'\n\nconst RegistrationForm = ({\n  onSubmit,\n  handleChange,\n  username,\n  password,\n  password2\n}) => {\n  return (\n    <div className='login-form'>\n      <style>{`\n      body > div,\n      body > div > div,\n      body > div > div > div.login-form {\n        height: 100%;\n      }\n    `}</style>\n      <Grid\n        textAlign='center'\n        style={{ height: '100%' }}\n        verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n          <Header as='h2' color='blue' textAlign='center'>\n            <Icon name='user circle' /> Create new account\n          </Header>\n          <Form\n            onSubmit={onSubmit}\n            size='large' /*loading success error field error*/\n          >\n            <Segment>\n              <Form.Input\n                fluid\n                icon='user'\n                name='newUsername'\n                iconPosition='left'\n                placeholder='Username'\n                value={username}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                name='newPassword'\n                iconPosition='left'\n                placeholder='Password'\n                type='password'\n                value={password}\n                onChange={handleChange}\n              />\n              <Form.Input\n                fluid\n                icon='lock'\n                name='newPassword2'\n                iconPosition='left'\n                placeholder='Repeat password'\n                type='password'\n                value={password2}\n                onChange={handleChange}\n              />\n              <Button color='blue' fluid size='large' type='submit'>\n                Submit\n              </Button>\n            </Segment>\n          </Form>\n          <Message>\n            <Link to='/login'>Login to account</Link>\n          </Message>\n        </Grid.Column>\n      </Grid>\n    </div>\n  )\n}\nexport default RegistrationForm\n","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/login'\n\nconst login = async credentials => {\n  const response =  await axios.post(baseUrl, credentials)\n  return response.data\n}\n\nexport default { login }\n","import axios from 'axios'\nconst baseUrl = 'http://localhost:3001/api/users'\n\nconst getAll = async () => {\n  const response = await axios.get(baseUrl)\n  return response.data\n}\n\nconst create = async newObject => {\n  const response = axios.post(baseUrl, newObject)\n  return response.data\n}\n\nconst update = async (id, newObject) => {\n  const response = await axios.put(`${baseUrl}/${id}`, newObject)\n  return response.data\n}\n\nconst remove = async id => {\n  const response = await axios.delete(`${baseUrl}/${id}`)\n  return response.data\n}\n\nexport default { getAll, create, update, remove }\n","import React from 'react'\nimport { Message, Container, Divider, Icon } from 'semantic-ui-react'\n\nconst Notification = ({ message, color }) => {\n  const icon = color === 'red' ? 'warning sign' : 'thumbs up'\n  const header = color === 'red' ? 'Warning!' : 'Success!'\n  if (message) {\n    return (\n      <div>\n        <Divider hidden />\n        <Message\n          icon={icon}\n          size='big'\n          color={color}\n          header={header}\n          content={message}\n          warning\n        />\n      </div>\n    )\n  }\n  return null\n}\n\nexport default Notification\n","import React, { Component } from 'react'\nimport GoogleApiWrapper from './GoogleApiWrapper'\nimport {\n  BrowserRouter as Router,\n  withRouter,\n  Redirect,\n  Route\n} from 'react-router-dom'\nimport {\n  Container,\n  Divider,\n  Modal,\n  Header,\n  Link,\n  Image,\n  Grid,\n  Form,\n  Segment,\n  Menu,\n  Icon,\n  Button,\n  Message\n} from 'semantic-ui-react'\nimport AddMenu from './components/AddMenu'\nimport AddRouting from './components/AddRouting'\nimport LoginForm from './LoginForm'\nimport RegistrationForm from './RegistrationForm'\nimport travelService from './services/travels'\nimport loginService from './services/login'\nimport userService from './services/users.js'\nimport Notification from './Notification'\n\nconst inlineStyle = {\n  modal: {\n    marginTop: '-250px',\n    display: 'fixed !important'\n  }\n}\n\nexport class App extends Component {\n  state = {\n    user: null,\n    username: '',\n    newUsername: '',\n    newPassword: '',\n    newPassword2: '',\n    password: '',\n    color: '',\n    message: ''\n  }\n\n  handleFieldChange = event => {\n    console.log(event.target.value)\n    this.setState({ [event.target.name]: event.target.value })\n  }\n  componentDidMount = async () => {\n    const loggedInUserJSON = window.localStorage.getItem('loggedInUser')\n    if (loggedInUserJSON) {\n      const user = JSON.parse(loggedInUserJSON)\n      this.setState({ user })\n      travelService.setToken(user.token)\n    }\n  }\n\n  logout = () => {\n    travelService.setToken(null)\n    window.localStorage.removeItem('loggedInUser')\n    this.notify(`${this.state.user.username} logged out succesfully!`, 'green')\n    this.setState({ user: null })\n    console.log('hoidettu')\n  }\n\n  notify = (message, color) => {\n    this.setState({ message, color })\n    setTimeout(() => {\n      this.setState({\n        message: null,\n        color: null\n      })\n    }, 2000)\n  }\n\n  login = async event => {\n    event.preventDefault()\n    try {\n      const user = await loginService.login({\n        username: this.state.username,\n        password: this.state.password\n      })\n\n      window.localStorage.setItem('loggedInUser', JSON.stringify(user))\n      travelService.setToken(user.token)\n      this.setState({ username: '', password: '', user: user })\n      this.notify(`${this.state.user.username} logged in succesfully!`, 'green')\n    } catch (exception) {\n      console.log(exception)\n      this.notify('invalid username or password, try again!', 'red')\n      this.setState({ username: '', password: '' })\n    }\n  }\n\n  register = async event => {\n    event.preventDefault()\n    const password = this.state.newPassword\n    if (password !== this.state.newPassword2) {\n      this.notify(\"Passwords don't match!\", 'red')\n    } else if (password.length < 3) {\n      this.notify('Password must be at least 3 characters long!', 'red')\n    } else {\n      this.createAccount()\n    }\n  }\n\n  createAccount = async () => {\n    try {\n      const user = await userService.create({\n        username: this.state.newUsername,\n        password: this.state.newPassword\n      })\n      this.notify(`account ${this.state.newUsername} created!`, 'green')\n      this.setState({\n        newUsername: '',\n        newPassword: '',\n        newPassword2: ''\n      })\n    } catch (exception) {\n      console.log(exception)\n      this.notify('server error!', 'red')\n    }\n    this.props.history.push('/login')\n  }\n\n  render() {\n    console.log('THE USER IS', this.state.user)\n    const user = this.state.user !== null\n    return (\n      <Container>\n        <Notification message={this.state.message} color={this.state.color} />\n        <Route\n          exact\n          path='/'\n          render={\n            user ? () => <Redirect to='/map' /> : () => <Redirect to='/login' />\n          }\n        />\n        <Route\n          path='/login'\n          render={\n            user\n              ? () => <Redirect to='/map' />\n              : () => (\n                  <LoginForm\n                    onSubmit={this.login}\n                    handleChange={this.handleFieldChange}\n                    username={this.state.username}\n                    password={this.state.password}\n                  />\n                )\n          }\n        />\n        <Route\n          path='/create'\n          render={\n            user\n              ? () => <Redirect to='/map' />\n              : () => (\n                  <RegistrationForm\n                    onSubmit={this.register.bind(this)}\n                    handleChange={this.handleFieldChange}\n                    username={this.state.newUsername}\n                    password={this.state.newPassword}\n                    password2={this.state.newPassword2}\n                  />\n                )\n          }\n        />\n        <Route\n          path='/map'\n          render={\n            user\n              ? () => (\n                  <Map\n                    user={this.state.user}\n                    logout={this.logout}\n                    settings={this.logout}\n                  />\n                )\n              : () => <Redirect to='/' />\n          }\n        />\n      </Container>\n    )\n  }\n}\n\nconst Map = ({ user, logout, settings }) => {\n  return (\n    <div\n      style={{\n        width: '100%',\n        marginLeft: 0\n      }}>\n      <MenuExampleButtons\n        name={user.username}\n        logout={logout}\n        settings={settings}\n      />\n      <GoogleApiWrapper\n        user={user}\n        apiKey='AIzaSyCy6G0q6EnGtGPGAAvLlC37STQU4Med0xE'\n        language={'en'}\n      />\n    </div>\n  )\n}\n\nconst MenuExampleButtons = ({ name, logout, settings }) => (\n  <Menu stackable widths={4} size='huge'>\n    <Menu.Item>Welcome {name}!</Menu.Item>\n    <Menu.Item>\n      <Button onClick={settings}>Settings</Button>\n    </Menu.Item>\n    <Menu.Item>\n      <Button onClick={logout}>Log out</Button>\n    </Menu.Item>\n  </Menu>\n)\n\nexport default withRouter(App)\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport './index.css'\n\nReactDOM.render(\n  <Router>\n    <App />\n  </Router>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}